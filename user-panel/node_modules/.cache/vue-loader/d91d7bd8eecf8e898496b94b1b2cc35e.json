{"remainingRequest":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/pages/Host.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/pages/Host.vue","mtime":1569422283380},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex'\nimport { Modal } from '@/components';\nexport default {\n    name: 'host',\n    components: {\n      Modal\n    },\n    data() {\n      return {\n        events:[],\n        userEvents: [],\n        hostedEvents: [],\n        rating: 5,\n        delModal: false,\n        eventName: null,\n        eventId: null\n      }\n    },\n    computed : {\n        ...mapGetters(['getEvents', 'allRatings']),\n        getSelectedEvents() {\n          return this.userEvents.map(event_id=> {\n          let event_item=this.getEvents.find(event_item=>event_item.id==event_id)\n            return event_item\n          })\n        },\n\n      filterEvents() {\n        let event = this.getSelectedEvents.filter(item => item.deleted === false)\n        return event;\n      },\n    },\n    methods: {\n      ...mapActions(['eventDelete', 'fetchEvents', 'fetchRatings', 'fetchAllUsers']),\n      viewEvent(id) {\n        this.$router.push({path: '/events/'+id})\n      },\n      deleteEvent(id, name) {\n        this.eventName = name\n        this.eventId = id\n        this.delModal = true\n      },\n      deleteNow() {\n        console.log(this.eventId)\n        let abc=this.events.find(event_item=>event_item.id==this.eventId)\n        // console.log(abc)\n        this.events.splice(abc, 1);           \n\n        this.eventDelete(this.eventId)\n        this.delModal = false\n\n        this.$router.push({path: '/events'})\n      },\n      getRatings(id) {\n      let avgRating = [];\n      this.allRatings.filter(rating => {\n        if(rating.host_id == id) {\n          avgRating.push(rating.ratingStars)\n        }\n      })\n\n      if(avgRating.length > 0) {\n        let sum = 0.0;\n        let avg = 0.0;\n\n        for(var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i]\n        }\n        avg = sum / avgRating.length;\n        return avg          \n      }\n    },\n    },\n    watch:{\n      getEvents(){\n        if(this.getEvents.length>0){\n      console.log(this.getSelectedEvents)\n      this.events=this.filterEvents\n\n          \n        }\n      }\n\n    },\n    created() {\n      \n      const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n      for(var key in loggedUser.events_hosted){\n        this.userEvents.push(loggedUser.events_hosted[key])\n      }\n      console.log(\"new runner\")\n      this.events=this.filterEvents\n      \n\n      console.log(this.getSelectedEvents)\n      //console.log(\"Count \" + loggedUser.events_hosted)\n      // this.userEvents = loggedUser.events_hosted\n      // console.log(\"Events \" + this.userEvents[0])\n    }\n}\n",{"version":3,"sources":["Host.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"Host.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <div>\n        \n    <div class=\"main\">\n      <div class=\"section section-images\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n                <h2>Your Engagements</h2>\n                <div class=\"row\">\n                  <!-- events -->\n                <div class=\"col-md-4\" v-for=\"(event, index) in events\" :key=\"index\">\n                  <div class=\"card\" style=\"cursor: pointer\">\n                  <div class=\"card-header\" @click=\"viewEvent(event.id)\">\n                    <img v-if=\"event.event_image != null\" :src=\"event.event_image\" width=\"500\" height=\"200\" alt=\"\">\n                    <img v-else src=\"../../public/sparcS.png\" width=\"500\" height=\"200\" alt=\"\">\n                  </div>\n                  <div class=\"card-body\">\n                    <div @click=\"viewEvent(event.id)\">\n                    <h5  class=\"text-success title-up\"><b> {{ event.event_name }} </b></h5>\n                    <h6> <star-rating :rating=\"getRatings(event.created_by)\" :increment=\"0.1\" :star-size=\"16\" :read-only=\"true\"></star-rating></h6>\n                    <h6 class=\"text-info\"> <i class=\"fa fa-map-marker\"></i> {{ event.event_location }}</h6>\n                    <h6 class=\"text-info\"> <i class=\"fa fa-clock-o\"></i> {{ event.start_time + \" - \" + event.end_time }} </h6>\n                    <h6 class=\"text-info\"> <i class=\"fa fa-calendar\"></i> {{ event.date }}</h6>\n                    </div>\n                    <button class=\"btn btn-danger pull-right\" @click=\"deleteEvent(event.id, event.event_name)\">Delete</button>\n                  </div>\n                </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <modal :show.sync=\"delModal\" headerClasses=\"justify-content-center\">\n      <h6 slot=\"header\" class=\"text-center\">Are you sure you want to Delete {{eventName}} ?</h6>\n      <div class=\"row\">\n        <div class=\"col-md-12 text-center\">\n          <button class=\"btn btn-danger mr-3\" @click=\"deleteNow\">Yes, Delete</button>\n          <button class=\"btn btn-info\" @click=\"delModal = false\">No, Cancel</button>\n        </div>\n        \n      </div>\n    </modal>\n    </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { Modal } from '@/components';\nexport default {\n    name: 'host',\n    components: {\n      Modal\n    },\n    data() {\n      return {\n        events:[],\n        userEvents: [],\n        hostedEvents: [],\n        rating: 5,\n        delModal: false,\n        eventName: null,\n        eventId: null\n      }\n    },\n    computed : {\n        ...mapGetters(['getEvents', 'allRatings']),\n        getSelectedEvents() {\n          return this.userEvents.map(event_id=> {\n          let event_item=this.getEvents.find(event_item=>event_item.id==event_id)\n            return event_item\n          })\n        },\n\n      filterEvents() {\n        let event = this.getSelectedEvents.filter(item => item.deleted === false)\n        return event;\n      },\n    },\n    methods: {\n      ...mapActions(['eventDelete', 'fetchEvents', 'fetchRatings', 'fetchAllUsers']),\n      viewEvent(id) {\n        this.$router.push({path: '/events/'+id})\n      },\n      deleteEvent(id, name) {\n        this.eventName = name\n        this.eventId = id\n        this.delModal = true\n      },\n      deleteNow() {\n        console.log(this.eventId)\n        let abc=this.events.find(event_item=>event_item.id==this.eventId)\n        // console.log(abc)\n        this.events.splice(abc, 1);           \n\n        this.eventDelete(this.eventId)\n        this.delModal = false\n\n        this.$router.push({path: '/events'})\n      },\n      getRatings(id) {\n      let avgRating = [];\n      this.allRatings.filter(rating => {\n        if(rating.host_id == id) {\n          avgRating.push(rating.ratingStars)\n        }\n      })\n\n      if(avgRating.length > 0) {\n        let sum = 0.0;\n        let avg = 0.0;\n\n        for(var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i]\n        }\n        avg = sum / avgRating.length;\n        return avg          \n      }\n    },\n    },\n    watch:{\n      getEvents(){\n        if(this.getEvents.length>0){\n      console.log(this.getSelectedEvents)\n      this.events=this.filterEvents\n\n          \n        }\n      }\n\n    },\n    created() {\n      \n      const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n      for(var key in loggedUser.events_hosted){\n        this.userEvents.push(loggedUser.events_hosted[key])\n      }\n      console.log(\"new runner\")\n      this.events=this.filterEvents\n      \n\n      console.log(this.getSelectedEvents)\n      //console.log(\"Count \" + loggedUser.events_hosted)\n      // this.userEvents = loggedUser.events_hosted\n      // console.log(\"Events \" + this.userEvents[0])\n    }\n}\n</script>\n\n<style scoped>\n    \n</style>"]}]}