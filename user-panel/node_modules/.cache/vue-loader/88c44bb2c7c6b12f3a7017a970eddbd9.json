{"remainingRequest":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/layout/MainNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/layout/MainNavbar.vue","mtime":1569534651397},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex'\nimport { DropDown, NavbarToggleButton, Navbar, NavLink } from '@/components';\nimport { Popover } from 'element-ui';\nexport default {\n  name: 'main-navbar',\n  props: {\n    transparent: Boolean,\n    colorOnScroll: Number\n  },\n  computed: { ...mapGetters(['loggedUser'])},\n  components: {\n    DropDown,\n    Navbar,\n    NavbarToggleButton,\n    NavLink,\n    [Popover.name]: Popover\n  },\n  data() {\n    return {\n      logout: true,\n      userEmail: '',\n    }\n  },\n  methods: {\n    ...mapActions(['finalSignoutrequest']),\n\n    userLogout() {\n      this.finalSignoutrequest();\n    }\n  },\n  watch: {\n    loggedUser(val) {\n      if(!val) {\n        console.log('No Val')\n        //this.$router.push({path: '/'})\n        this.logout = true\n        // window.location.reload(false);\n      }\n      else {\n        this.logout = false;\n        this.userEmail = JSON.parse(localStorage.getItem('loggedUser')).email;\n      }\n    }\n  },\n  created() {\n    const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n    console.log(loggedUser)\n    if(loggedUser != null) {\n      this.logout = false;\n    }\n  }\n};\n",{"version":3,"sources":["MainNavbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MainNavbar.vue","sourceRoot":"src/layout","sourcesContent":["<template>\n  <navbar\n    type=\"info\"\n    :color-on-scroll=\"colorOnScroll\"\n    menu-classes=\"ml-auto\"\n  >\n    <template>\n      <router-link class=\"navbar-brand\" to=\"/\">\n        <img src=\"sparcS.png\" width=\"30\"  alt=\"\">\n      </router-link>\n      <!-- <el-popover\n        ref=\"popover1\"\n        popper-class=\"popover\"\n        placement=\"bottom\"\n        width=\"100\"\n        trigger=\"hover\"\n      >\n        <div class=\"popover-body\">\n          Sparco\n        </div>\n      </el-popover> -->\n    </template>\n    <template slot=\"navbar-menu\">\n      <!-- <li class=\"nav-item\">\n        <a\n          class=\"nav-link\"\n          href=\"https://www.creative-tim.com/product/vue-now-ui-kit\"\n          target=\"_blank\"\n        >\n          <i class=\"now-ui-icons users_circle-08\"></i>\n          <p>Login</p>\n        </a>\n      </li> -->\n      <li class=\"nav-item\" v-if=\"!this.logout\">\n        <router-link class=\"navbar-brand nav-link text-success\" to=\"/events\">\n        <b>Home</b>\n        </router-link>\n      </li>\n      <li class=\"nav-item\" v-if=\"!this.logout\">\n        <router-link class=\"navbar-brand nav-link text-success\" to=\"/upcoming-events\">\n        <b>Upcoming Engagements</b>\n        </router-link>\n      </li>\n      <li class=\"nav-item\" v-if=\"!this.logout\">\n        <router-link class=\"navbar-brand nav-link text-success\" to=\"/past-events\">\n        <b>Past Engagements</b>\n        </router-link>\n      </li>\n      <!-- <li class=\"nav-item\" v-if=\"!this.logout\">\n        <router-link class=\"navbar-brand nav-link text-success\" to=\"\">\n        Billing History\n        </router-link>\n      </li> -->\n      <li class=\"nav-item\" v-if=\"!this.logout\">\n        <router-link class=\"navbar-brand nav-link text-success\" to=\"/profile\">\n        <b>Profile</b>\n        </router-link>\n      </li>\n      \n      <li class=\"nav-item\" v-if=\"!this.logout\" @click=\"userLogout\">\n        <router-link class=\"navbar-brand nav-link text-success\" to=\"/\">\n        <b>Logout</b>\n        </router-link>\n      </li>\n      \n      <li class=\"nav-item\">\n        <router-link class=\"navbar-brand nav-link btn btn-info\" to=\"/login\" v-if=\"this.logout\">\n        <b>Login</b>\n        </router-link>  \n      </li>\n      <li class=\"nav-item\">\n        <router-link class=\"navbar-brand nav-link btn btn-info text-white\" to=\"/host\" v-if=\"!this.logout\">\n        Host\n        </router-link>\n      </li>\n    </template>\n  </navbar>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { DropDown, NavbarToggleButton, Navbar, NavLink } from '@/components';\nimport { Popover } from 'element-ui';\nexport default {\n  name: 'main-navbar',\n  props: {\n    transparent: Boolean,\n    colorOnScroll: Number\n  },\n  computed: { ...mapGetters(['loggedUser'])},\n  components: {\n    DropDown,\n    Navbar,\n    NavbarToggleButton,\n    NavLink,\n    [Popover.name]: Popover\n  },\n  data() {\n    return {\n      logout: true,\n      userEmail: '',\n    }\n  },\n  methods: {\n    ...mapActions(['finalSignoutrequest']),\n\n    userLogout() {\n      this.finalSignoutrequest();\n    }\n  },\n  watch: {\n    loggedUser(val) {\n      if(!val) {\n        console.log('No Val')\n        //this.$router.push({path: '/'})\n        this.logout = true\n        // window.location.reload(false);\n      }\n      else {\n        this.logout = false;\n        this.userEmail = JSON.parse(localStorage.getItem('loggedUser')).email;\n      }\n    }\n  },\n  created() {\n    const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n    console.log(loggedUser)\n    if(loggedUser != null) {\n      this.logout = false;\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"]}]}