{"remainingRequest":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/pages/PastEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/pages/PastEvents.vue","mtime":1569536643982},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Parallax, FormGroupInput } from '@/components';\nimport nativeToast from 'native-toast'\nimport { mapGetters, mapActions } from 'vuex'\nexport default {\n  name: 'past-events',\n  bodyClass: 'past-events-page',\n  components: {\n    Parallax,\n    [FormGroupInput.name]: FormGroupInput,\n  },\n  data() {\n    return {\n      rating: 5,\n      currentDate: null,\n      userEvents: [],\n      url: null,\n      foundEvents: []\n    }\n  },\n  computed: {\n    ...mapGetters(['getEvents', 'allRatings', 'allUsers']),\n    getUpcomingEvents() {\n      return this.userEvents.map(event_id=> {\n        let event_item=this.getEvents.find(event_item=> {\n          if(event_item.id==event_id && event_item.deleted == false && Date.parse(this.currentDate) > Date.parse(event_item.date)) {\n            this.foundEvents.push(event_item)\n          }\n        })\n          return this.foundEvents;\n\n          })\n    },\n\n    filterPast() {\n          let event = this.getUpcomingEvents.filter(event => Date.parse(this.currentDate) > Date.parse(event.date))\n          return event\n        }\n  },\n  methods: {\n    ...mapActions(['fetchEvents', 'fetchUser']),\n\n    viewEvent(id) {\n      this.$router.push('/events/'+id)\n    },\n    clipboardSuccessHandler({ value, event }) {\n        console.log('success', value)\n        nativeToast({\n          message: 'Link Copied to Clipboard',\n          position: 'north-east',\n          // Self destroy in 5 seconds\n          timeout: 3000,\n          type: 'success'\n        })\n    },\n    getUser(id) {\n      let user_item = this.allUsers.find(user => user.id === id)\n        return user_item\n    },\n    getRatings(id) {\n      let avgRating = [];\n      this.allRatings.filter(rating => {\n        if(rating.host_id == id) {\n          avgRating.push(rating.ratingStars)\n        }\n      })\n\n      if(avgRating.length > 0) {\n        let sum = 0.0;\n        let avg = 0.0;\n\n        for(var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i]\n        }\n        avg = sum / avgRating.length;\n        return avg\n      }\n    },\n  },\n  created() {\n    this.fetchEvents();\n\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1;\n    var yyyy = today.getFullYear();\n\n    this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n\n    var link = window.location.href;\n    this.url = link.replace('/past-events', '/events/')\n\n    this.fetchUser();\n\n    const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n      for(var key in loggedUser.events_attended){\n        this.userEvents.push(loggedUser.events_attended[key])\n      }\n      this.getUpcomingEvents\n  }\n};\n",{"version":3,"sources":["PastEvents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PastEvents.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div>\n    <div class=\"main\">\n      <div class=\"section section-images\">\n        <div class=\"container\" id=\"top\">\n          <div class=\"col-md-12\">\n            <div class=\"row text-center\">\n              <div class=\"col-md-12\">\n                <h2 class=\"text-center ml-3 title title-up mb-5\">Past Engagements</h2>\n              </div>\n            </div>\n\n            <div class=\"row\">\n\n              <div class=\"col-md-4\" v-for=\"(event, index) in foundEvents\" v-if=\"event.deleted==false\"  :key=\"index\">\n                <div v-if=\"Date.parse(currentDate) > Date.parse(event.date)\">\n                  <div class=\"card\" style=\"cursor: pointer\" >\n                    <div class=\"card-header\">\n                    <img v-if=\"event.event_image != null\" :src=\"event.event_image\" class=\"lizzet_image\" alt=\"\" @click=\"viewEvent(event.id)\">\n                    <img v-else src=\"../../public/sparcS.png\" class=\"lizzet_image\" alt=\"\">\n                    <div class=\"text-success pull-right mt-4 mr-3\" v-clipboard=\"() => url+''+event.id\" v-clipboard:success=\"clipboardSuccessHandler\"><i class=\"fa fa-copy\"></i></div>\n                    </div>\n                    <div class=\"card-body\" style= \"height:200px; position:relative;\" @click=\"viewEvent(event.id)\">\n                    <h5 class=\"text-success\"><b> {{ event.event_name }}</b></h5>\n                    <h6 class=\"text-info\"> <i class=\"fa fa-map-marker\"></i> {{ event.event_location }}</h6>\n                    <h6 class=\"text-info\"> <i class=\"fa fa-clock-o\"></i> {{ event.start_time + \" - \" + event.end_time }} </h6>\n                    <h6 class=\"text-info\"> <i class=\"fa fa-calendar\"></i> {{ event.date }}</h6>\n                    <h6> <star-rating :rating=\"getRatings(event.created_by)\" :increment=\"0.1\" :star-size=\"16\" :read-only=\"true\"></star-rating></h6>\n                    <h6 class=\"text-success pull-right\"> <img class=\"image-class\" width=\"30\" height=\"30\" :src=\"getUser(event.created_by).profile_image\" alt=\"\"> {{ getUser(event.created_by).first_name + \" \" + getUser(event.created_by).last_name[0] + \".\" }}</h6>\n\n                    </div>\n                </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { Parallax, FormGroupInput } from '@/components';\nimport nativeToast from 'native-toast'\nimport { mapGetters, mapActions } from 'vuex'\nexport default {\n  name: 'past-events',\n  bodyClass: 'past-events-page',\n  components: {\n    Parallax,\n    [FormGroupInput.name]: FormGroupInput,\n  },\n  data() {\n    return {\n      rating: 5,\n      currentDate: null,\n      userEvents: [],\n      url: null,\n      foundEvents: []\n    }\n  },\n  computed: {\n    ...mapGetters(['getEvents', 'allRatings', 'allUsers']),\n    getUpcomingEvents() {\n      return this.userEvents.map(event_id=> {\n        let event_item=this.getEvents.find(event_item=> {\n          if(event_item.id==event_id && event_item.deleted == false && Date.parse(this.currentDate) > Date.parse(event_item.date)) {\n            this.foundEvents.push(event_item)\n          }\n        })\n          return this.foundEvents;\n\n          })\n    },\n\n    filterPast() {\n          let event = this.getUpcomingEvents.filter(event => Date.parse(this.currentDate) > Date.parse(event.date))\n          return event\n        }\n  },\n  methods: {\n    ...mapActions(['fetchEvents', 'fetchUser']),\n\n    viewEvent(id) {\n      this.$router.push('/events/'+id)\n    },\n    clipboardSuccessHandler({ value, event }) {\n        console.log('success', value)\n        nativeToast({\n          message: 'Link Copied to Clipboard',\n          position: 'north-east',\n          // Self destroy in 5 seconds\n          timeout: 3000,\n          type: 'success'\n        })\n    },\n    getUser(id) {\n      let user_item = this.allUsers.find(user => user.id === id)\n        return user_item\n    },\n    getRatings(id) {\n      let avgRating = [];\n      this.allRatings.filter(rating => {\n        if(rating.host_id == id) {\n          avgRating.push(rating.ratingStars)\n        }\n      })\n\n      if(avgRating.length > 0) {\n        let sum = 0.0;\n        let avg = 0.0;\n\n        for(var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i]\n        }\n        avg = sum / avgRating.length;\n        return avg\n      }\n    },\n  },\n  created() {\n    this.fetchEvents();\n\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1;\n    var yyyy = today.getFullYear();\n\n    this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n\n    var link = window.location.href;\n    this.url = link.replace('/past-events', '/events/')\n\n    this.fetchUser();\n\n    const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n      for(var key in loggedUser.events_attended){\n        this.userEvents.push(loggedUser.events_attended[key])\n      }\n      this.getUpcomingEvents\n  }\n};\n</script>\n<style scoped>\n  #top {\n    margin-top: -70px;\n  }\n</style>\n"]}]}