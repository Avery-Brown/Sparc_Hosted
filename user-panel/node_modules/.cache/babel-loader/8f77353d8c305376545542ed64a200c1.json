{"remainingRequest":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/pages/PastEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/pages/PastEvents.vue","mtime":1569707119064},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":1569707114692},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js","mtime":1569707114271},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":1569707114692},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js","mtime":1569707118667}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Parallax, FormGroupInput } from '@/components';\nimport nativeToast from 'native-toast';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'past-events',\n  bodyClass: 'past-events-page',\n  components: _defineProperty({\n    Parallax: Parallax\n  }, FormGroupInput.name, FormGroupInput),\n  data: function data() {\n    return {\n      rating: 5,\n      currentDate: null,\n      userEvents: [],\n      url: null,\n      foundEvents: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['getEvents', 'allRatings', 'allUsers']), {\n    getUpcomingEvents: function getUpcomingEvents() {\n      var _this = this;\n\n      return this.userEvents.map(function (event_id) {\n        var event_item = _this.getEvents.find(function (event_item) {\n          if (event_item.id == event_id && event_item.deleted == false && Date.parse(_this.currentDate) > Date.parse(event_item.date)) {\n            _this.foundEvents.push(event_item);\n          }\n        });\n\n        return _this.foundEvents;\n      });\n    },\n    filterPast: function filterPast() {\n      var _this2 = this;\n\n      var event = this.getUpcomingEvents.filter(function (event) {\n        return Date.parse(_this2.currentDate) > Date.parse(event.date);\n      });\n      return event;\n    }\n  }),\n  methods: _objectSpread({}, mapActions(['fetchEvents', 'fetchUser']), {\n    viewEvent: function viewEvent(id) {\n      this.$router.push('/events/' + id);\n    },\n    clipboardSuccessHandler: function clipboardSuccessHandler(_ref) {\n      var value = _ref.value,\n          event = _ref.event;\n      console.log('success', value);\n      nativeToast({\n        message: 'Link Copied to Clipboard',\n        position: 'north-east',\n        // Self destroy in 5 seconds\n        timeout: 3000,\n        type: 'success'\n      });\n    },\n    getUser: function getUser(id) {\n      var user_item = this.allUsers.find(function (user) {\n        return user.id === id;\n      });\n      return user_item;\n    },\n    getRatings: function getRatings(id) {\n      var avgRating = [];\n      this.allRatings.filter(function (rating) {\n        if (rating.host_id == id) {\n          avgRating.push(rating.ratingStars);\n        }\n      });\n\n      if (avgRating.length > 0) {\n        var sum = 0.0;\n        var avg = 0.0;\n\n        for (var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i];\n        }\n\n        avg = sum / avgRating.length;\n        return avg;\n      }\n    }\n  }),\n  created: function created() {\n    this.fetchEvents();\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1;\n    var yyyy = today.getFullYear();\n    this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n    var link = window.location.href;\n    this.url = link.replace('/past-events', '/events/');\n    this.fetchUser();\n    var loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n\n    for (var key in loggedUser.events_attended) {\n      this.userEvents.push(loggedUser.events_attended[key]);\n    }\n\n    this.getUpcomingEvents;\n  }\n};",{"version":3,"sources":["PastEvents.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"main\">\n      <div class=\"section section-images\">\n        <div class=\"container\" id=\"top\">\n          <div class=\"col-md-12\">\n            <div class=\"row text-center\">\n              <div class=\"col-md-12\">\n                <h2 class=\"text-center ml-3 title title-up mb-5\">Past Engagements</h2>\n              </div>\n            </div>\n\n            <div class=\"row\">\n\n              <div class=\"col-md-4\" v-for=\"(event, index) in foundEvents\" v-if=\"event.deleted==false\"  :key=\"index\">\n                <div v-if=\"Date.parse(currentDate) > Date.parse(event.date)\">\n                  <div class=\"card\" style=\"cursor: pointer\" >\n                    <div class=\"card-header\">\n                    <img v-if=\"event.event_image != null\" :src=\"event.event_image\" class=\"lizzet_image\" alt=\"\" @click=\"viewEvent(event.id)\">\n                    <img v-else src=\"../../public/sparcS.png\" class=\"lizzet_image\" alt=\"\">\n                    <div class=\"text-success pull-right mt-4 mr-3\" v-clipboard=\"() => url+''+event.id\" v-clipboard:success=\"clipboardSuccessHandler\"><i class=\"fa fa-copy\"></i></div>\n                    </div>\n                    <div class=\"card-body\" style= \"height:200px; position:relative;\" @click=\"viewEvent(event.id)\">\n                    <h5 class=\"text-success\"><b> {{ event.event_name }}</b></h5>\n                    <h6 class=\"text-info\"> <i class=\"fa fa-map-marker\"></i> {{ event.event_location }}</h6>\n                    <h6 class=\"text-info\"> <i class=\"fa fa-clock-o\"></i> {{ event.start_time + \" - \" + event.end_time }} </h6>\n                    <h6 class=\"text-info\"> <i class=\"fa fa-calendar\"></i> {{ event.date }}</h6>\n                    <h6> <star-rating :rating=\"getRatings(event.created_by)\" :increment=\"0.1\" :star-size=\"16\" :read-only=\"true\"></star-rating></h6>\n                    <h6 class=\"text-success pull-right\"> <img class=\"image-class\" width=\"30\" height=\"30\" :src=\"getUser(event.created_by).profile_image\" alt=\"\"> {{ getUser(event.created_by).first_name + \" \" + getUser(event.created_by).last_name[0] + \".\" }}</h6>\n\n                    </div>\n                </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { Parallax, FormGroupInput } from '@/components';\nimport nativeToast from 'native-toast'\nimport { mapGetters, mapActions } from 'vuex'\nexport default {\n  name: 'past-events',\n  bodyClass: 'past-events-page',\n  components: {\n    Parallax,\n    [FormGroupInput.name]: FormGroupInput,\n  },\n  data() {\n    return {\n      rating: 5,\n      currentDate: null,\n      userEvents: [],\n      url: null,\n      foundEvents: []\n    }\n  },\n  computed: {\n    ...mapGetters(['getEvents', 'allRatings', 'allUsers']),\n    getUpcomingEvents() {\n      return this.userEvents.map(event_id=> {\n        let event_item=this.getEvents.find(event_item=> {\n          if(event_item.id==event_id && event_item.deleted == false && Date.parse(this.currentDate) > Date.parse(event_item.date)) {\n            this.foundEvents.push(event_item)\n          }\n        })\n          return this.foundEvents;\n\n          })\n    },\n\n    filterPast() {\n          let event = this.getUpcomingEvents.filter(event => Date.parse(this.currentDate) > Date.parse(event.date))\n          return event\n        }\n  },\n  methods: {\n    ...mapActions(['fetchEvents', 'fetchUser']),\n\n    viewEvent(id) {\n      this.$router.push('/events/'+id)\n    },\n    clipboardSuccessHandler({ value, event }) {\n        console.log('success', value)\n        nativeToast({\n          message: 'Link Copied to Clipboard',\n          position: 'north-east',\n          // Self destroy in 5 seconds\n          timeout: 3000,\n          type: 'success'\n        })\n    },\n    getUser(id) {\n      let user_item = this.allUsers.find(user => user.id === id)\n        return user_item\n    },\n    getRatings(id) {\n      let avgRating = [];\n      this.allRatings.filter(rating => {\n        if(rating.host_id == id) {\n          avgRating.push(rating.ratingStars)\n        }\n      })\n\n      if(avgRating.length > 0) {\n        let sum = 0.0;\n        let avg = 0.0;\n\n        for(var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i]\n        }\n        avg = sum / avgRating.length;\n        return avg\n      }\n    },\n  },\n  created() {\n    this.fetchEvents();\n\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1;\n    var yyyy = today.getFullYear();\n\n    this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n\n    var link = window.location.href;\n    this.url = link.replace('/past-events', '/events/')\n\n    this.fetchUser();\n\n    const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n      for(var key in loggedUser.events_attended){\n        this.userEvents.push(loggedUser.events_attended[key])\n      }\n      this.getUpcomingEvents\n  }\n};\n</script>\n<style scoped>\n  #top {\n    margin-top: -70px;\n  }\n</style>\n"],"sourceRoot":"src/pages"}]}