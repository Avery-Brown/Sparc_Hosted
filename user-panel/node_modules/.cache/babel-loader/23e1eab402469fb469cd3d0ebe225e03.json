{"remainingRequest":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/pages/HostUpcomingEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/pages/HostUpcomingEvents.vue","mtime":1569707119063},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":1569707114692},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js","mtime":1569707114271},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":1569707114692},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js","mtime":1569707118667}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport moment from 'moment';\nexport default {\n  name: 'host-upcoming-engagements',\n  data: function data() {\n    return {\n      userEvents: [],\n      hostedEvents: [],\n      rating: 5,\n      currentDate: null,\n      foundEvents: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['getEvents', 'allRatings']), {\n    //   getSelectedEvents() {\n    //     this.foundEvents = []\n    //     return this.userEvents.map(event_id=> {\n    //     let event_item=this.getEvents.find(event_item=> {\n    //       if(event_item.id==event_id && event_item.deleted == false && Date.parse(this.currentDate) <= Date.parse(event_item.date)) {\n    //         this.foundEvents.push(event_item)\n    //       }\n    //     })\n    //       return this.foundEvents;\n    //       })\n    // },\n    thevents: function thevents() {\n      var _this = this;\n\n      return this.userEvents.map(function (event_id) {\n        // let event_date=moment(this.selected_event.date).format(\"MM/DD/YYYY\")\n        // return moment(event_date).isBefore(moment().format(\"MM/DD/YYYY\"))\n        var event_item = _this.getEvents.find(function (event_item) {\n          return event_item.id == event_id;\n        }); // Date.parse(this.currentDate) <= Date.parse(event_item.date))\n\n\n        return event_item;\n      });\n    },\n    dates: function dates() {\n      return this.thevents.filter(function (event_item) {\n        return moment(event_item.date).isAfter(moment().format('MM/DD/YYYY')) == true && event_item.deleted == false;\n      });\n    } // filterUpcoming() {\n    //     let event = this.getSelectedEvents.filter(event => Date.parse(this.currentDate) <= Date.parse(event.date))\n    //     return event\n    //   }\n\n  }),\n  watch: {\n    getEvents: function getEvents() {\n      if (this.getEvents.length > 0) {\n        console.log(this.thevents);\n        console.log(this.dates);\n        this.foundEvents = this.dates; // console.log(this.getEvents.find(event_item=>event_item.id==id))\n      }\n    }\n  },\n  methods: {\n    viewEvent: function viewEvent(id) {\n      this.$router.push({\n        path: '/events/' + id\n      });\n    },\n    getRatings: function getRatings(id) {\n      var avgRating = [];\n      this.allRatings.filter(function (rating) {\n        if (rating.host_id == id) {\n          avgRating.push(rating.ratingStars);\n        }\n      });\n\n      if (avgRating.length > 0) {\n        var sum = 0.0;\n        var avg = 0.0;\n\n        for (var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i];\n        }\n\n        avg = sum / avgRating.length;\n        return avg;\n      }\n    }\n  },\n  created: function created() {\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1;\n    var yyyy = today.getFullYear();\n    this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n    var loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n\n    for (var key in loggedUser.events_hosted) {\n      this.userEvents.push(loggedUser.events_hosted[key]);\n    }\n\n    if (this.getEvents.length > 0) {\n      console.log(this.thevents);\n      console.log(this.dates);\n      this.foundEvents = this.dates;\n    }\n\n    console.log(this.thevents); // console.log(moment('4/4/2019').isAfter(moment().format(\"MM/DD/YYYY\")))\n    //console.log(\"Count \" + loggedUser.events_hosted)\n    // this.userEvents = loggedUser.events_hosted\n    // console.log(\"Events \" + this.userEvents[0])\n  }\n};",{"version":3,"sources":["HostUpcomingEvents.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n    <div class=\"main\">\n      <div class=\"section section-images\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n                <h2>Upcoming Engagements</h2>\n                <div class=\"row\">\n\n                <div class=\"col-md-4\" v-for=\"(event, index) in foundEvents\" :key=\"index\" >\n                  <div @click=\"viewEvent(event.id)\" style=\"cursor: pointer\" v-if=\"Date.parse(currentDate) <= Date.parse(event.date)\">\n                      <div class=\"card\">\n                        <div class=\"card-header\">\n                            <img v-if=\"event.event_image != null\" :src=\"event.event_image\" class=\"lizzet_image\" alt=\"\">\n                            <img v-else src=\"../../public/sparcS.png\" class=\"lizzet_image\" alt=\"\">\n                        </div>\n                        <div class=\"card-body\" style= \"height:200px; position:relative;\">\n                            <h5 class=\"text-success title-up\"><b> {{ event.event_name }} </b></h5>\n                            <h6 class=\"text-info\"> <i class=\"fa fa-map-marker\"></i> {{ event.event_location }}</h6>\n                            <h6 class=\"text-info\"> <i class=\"fa fa-clock-o\"></i> {{ event.start_time + \" - \" + event.end_time }} </h6>\n                            <h6 class=\"text-info\"> <i class=\"fa fa-calendar\"></i> {{ event.date }}</h6>\n                            <h6> <star-rating :rating=\"getRatings(event.created_by)\" :increment=\"0.1\" :star-size=\"16\" :read-only=\"true\"></star-rating></h6>\n                        </div>\n                      </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n  import moment from 'moment'\n\nexport default {\n    name: 'host-upcoming-engagements',\n    data() {\n      return {\n        userEvents: [],\n        hostedEvents: [],\n        rating: 5,\n        currentDate: null,\n        foundEvents: []\n      }\n    },\n    computed : {\n        ...mapGetters(['getEvents', 'allRatings']),\n      //   getSelectedEvents() {\n      //     this.foundEvents = []\n      //     return this.userEvents.map(event_id=> {\n      //     let event_item=this.getEvents.find(event_item=> {\n      //       if(event_item.id==event_id && event_item.deleted == false && Date.parse(this.currentDate) <= Date.parse(event_item.date)) {\n      //         this.foundEvents.push(event_item)\n      //       }\n      //     })\n      //       return this.foundEvents;\n\n      //       })\n      // },\n      thevents() {\n          return this.userEvents.map(event_id=> {\n                        // let event_date=moment(this.selected_event.date).format(\"MM/DD/YYYY\")\n            // return moment(event_date).isBefore(moment().format(\"MM/DD/YYYY\"))\n          let event_item=this.getEvents.find(event_item=> event_item.id==event_id )// Date.parse(this.currentDate) <= Date.parse(event_item.date))\n\nreturn event_item;\n          })\n      },\n      dates(){\n       return this.thevents.filter(event_item=>moment(event_item.date).isAfter(moment().format('MM/DD/YYYY'))==true && event_item.deleted == false)\n      }\n\n      // filterUpcoming() {\n      //     let event = this.getSelectedEvents.filter(event => Date.parse(this.currentDate) <= Date.parse(event.date))\n      //     return event\n      //   }\n    },\n    watch:{\n      getEvents(){\n         if(this.getEvents.length>0){\n              console.log(this.thevents)\n              console.log(this.dates)\n              this.foundEvents=this.dates\n        // console.log(this.getEvents.find(event_item=>event_item.id==id))\n\n         }\n      }\n    },\n    methods: {\n      viewEvent(id) {\n        this.$router.push({path: '/events/'+id})\n      },\n      getRatings(id) {\n      let avgRating = [];\n      this.allRatings.filter(rating => {\n        if(rating.host_id == id) {\n          avgRating.push(rating.ratingStars)\n        }\n      })\n\n      if(avgRating.length > 0) {\n        let sum = 0.0;\n        let avg = 0.0;\n\n        for(var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i]\n        }\n        avg = sum / avgRating.length;\n        return avg\n      }\n    },\n    },\n    created() {\n        var today = new Date();\n        var dd = today.getDate();\n        var mm = today.getMonth() + 1;\n        var yyyy = today.getFullYear();\n\n        this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n      const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n      for(var key in loggedUser.events_hosted){\n        this.userEvents.push(loggedUser.events_hosted[key])\n      }\n\n      if(this.getEvents.length>0){\n              console.log(this.thevents)\n              console.log(this.dates)\n              this.foundEvents=this.dates\n         }\n\n      console.log(this.thevents)\n      // console.log(moment('4/4/2019').isAfter(moment().format(\"MM/DD/YYYY\")))\n\n\n      //console.log(\"Count \" + loggedUser.events_hosted)\n      // this.userEvents = loggedUser.events_hosted\n      // console.log(\"Events \" + this.userEvents[0])\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/pages"}]}