{"remainingRequest":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/pages/EventDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/src/pages/EventDetails.vue","mtime":1569716460823},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":1569707114692},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js","mtime":1569707114271},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":1569707114692},{"path":"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js","mtime":1569707118667}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/Users/lizzetclifton/Documents/Fall 2019/CS_408/CS408-Sparc/Sparc_Hosted/user-panel/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar stripe = Stripe(\"pk_test_VkqrGCFhu1QHtAQJ5xtAYdIH00dooEGlrN\"),\n    elements = stripe.elements(),\n    card = undefined;\nimport { Parallax, FormGroupInput, Alert, Modal } from '@/components';\nimport axios from 'axios';\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'event-details',\n  bodyClass: 'event-details-page',\n  destroyed: function destroyed() {\n    card.destroy(this.$refs.card);\n  },\n  mounted: function mounted() {\n    var style = {\n      base: {\n        color: '#32325d',\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#aab7c4'\n        }\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a'\n      }\n    };\n    card = elements.create('card', {\n      style: style\n    });\n    card.mount(this.$refs.card);\n  },\n  components: _defineProperty({\n    Parallax: Parallax,\n    Alert: Alert,\n    Modal: Modal\n  }, FormGroupInput.name, FormGroupInput),\n  data: function data() {\n    return {\n      noImage: require(\"../../public/sparcS.png\"),\n      modals: {\n        participateModal: false,\n        selectModal: false,\n        payModal: false\n      },\n      url: window.location.href,\n      rating: 0,\n      eventRating: 5,\n      success: null,\n      event: [],\n      fetchedTags: [],\n      tagName: [],\n      newEvent: {\n        id: null,\n        userId: null\n      },\n      msg: null,\n      userEvents: [],\n      ratedEvents: [],\n      total: 0,\n      totalVirtual: 0,\n      currentDate: null,\n      userDetails: {},\n      participated: false,\n      participantsList: [],\n      submitEventRating: {\n        ratingStars: null,\n        feedback: null,\n        host_id: null,\n        event_id: null,\n        user_id: null\n      },\n      isUserParticipant: false,\n      isUserRated: false,\n      isUserLogged: false,\n      fetchedRatings: [],\n      shown: true,\n      userEmail: null,\n      type: null,\n      disablePay: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['getSelectedEvent', 'allTags', 'getParticipants', 'getVirtualParticipants', 'user', 'allUsers', 'allRatings', 'ratingDone']), {\n    getEventTags: function getEventTags() {\n      var _this = this;\n\n      this.fetchedTags = this.getSelectedEvent[0].tags;\n      return this.fetchedTags.map(function (element) {\n        var eventTag = _this.allTags.find(function (tag) {\n          return tag.id == element;\n        });\n\n        return eventTag;\n      });\n    },\n    getParticipantsList: function getParticipantsList() {\n      var _this2 = this;\n\n      this.participantsList = [];\n      return this.getParticipants.map(function (item) {\n        var user_item = _this2.allUsers.find(function (user) {\n          return user.id == item;\n        });\n\n        return user_item;\n      });\n    },\n    getVirtualParticipantsList: function getVirtualParticipantsList() {\n      var _this3 = this;\n\n      return this.getVirtualParticipants.map(function (item) {\n        var user_item = _this3.allUsers.find(function (user) {\n          return user.id == item;\n        });\n\n        return user_item;\n      });\n    },\n    getRatings: function getRatings() {\n      var _this4 = this;\n\n      this.fetchedRatings = [];\n      var rating = this.allRatings.filter(function (item) {\n        return item.event_id == _this4.newEvent.id;\n      });\n      return rating;\n    }\n  }),\n  methods: _objectSpread({}, mapActions(['fetchEventById', 'createBill', 'fetchVirtualParticipants', 'fetchRatings', 'fetchTags', 'fetchParticipants', 'eventParticipant', 'virtualParticipant', 'fetchUser', 'fetchUserById', 'saveRating']), {\n    dismiss: function dismiss() {\n      this.modals.participateModal = false;\n      this.modals.selectModal = false;\n    },\n    inPersonClick: function inPersonClick() {\n      this.inPersonParticipate();\n    },\n    virtualClick: function virtualClick() {\n      console.log(this.getSelectedEvent[0].virtual_capacity);\n      this.virtualParticipate();\n    },\n    copyLink: function copyLink() {\n      var copyText = window.location.href;\n      console.log(copyText);\n      document.execCommand(\"copy\");\n    },\n    clipboardSuccessHandler: function clipboardSuccessHandler(_ref) {\n      var value = _ref.value,\n          event = _ref.event;\n      console.log('success', value);\n    },\n    getUserDetails: function getUserDetails(id) {\n      // let ref = this;\n      var user_obj = this.allUsers.find(function (user_item) {\n        return user_item.id == id;\n      });\n      this.userDetails = user_obj;\n      return user_obj;\n    },\n    participateEvent: function participateEvent() {\n      var _this5 = this;\n\n      var loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n\n      if (loggedUser != null) {\n        // for(var key in this.getSelectedEvent[0].users_attending){\n        //     this.userEvents.push(this.getSelectedEvent[0].users_attending[key])\n        // }\n        console.log(this.userEvents);\n\n        if (this.userEvents.find(function (element) {\n          return element == _this5.newEvent.id;\n        })) {\n          console.log(\"Already Signed Up\");\n          this.msg = \"You are Already Signed Up\";\n          this.modals.participateModal = true;\n          this.participated = true;\n          return;\n        }\n\n        if (this.getSelectedEvent[0].event_type == 'in Person') {\n          this.inPersonParticipate();\n        }\n\n        if (this.getSelectedEvent[0].event_type == 'virtual') {\n          this.virtualParticipate();\n        }\n\n        if (this.getSelectedEvent[0].event_type == 'both') {\n          this.modals.selectModal = true;\n          return;\n        }\n      } else {\n        this.modals.participateModal = true;\n        this.msg = \"Please Login to Participate\";\n      }\n    },\n    inPersonParticipate: function inPersonParticipate() {\n      this.modals.selectModal = false;\n\n      if (this.total >= this.getSelectedEvent[0].capacity) {\n        this.modals.participateModal = true;\n        this.msg = \"Sorry! All seats are reserved\";\n        return;\n      }\n\n      if (this.getSelectedEvent[0].event_price_per_person != null) {\n        this.type = 'in Person';\n        this.modals.payModal = true; //this.msg = \"Please Pay Engagement Fee to particpate\"\n\n        return;\n      }\n\n      this.sendEmail();\n      this.eventParticipant(this.newEvent);\n      this.total++;\n      this.modals.participateModal = true;\n      this.msg = \"Your Seat has been confirmed\";\n      this.shown = false;\n      return;\n    },\n    virtualParticipate: function virtualParticipate() {\n      this.modals.selectModal = false;\n\n      if (this.totalVirtual >= this.getSelectedEvent[0].virtual_capacity) {\n        this.modals.participateModal = true;\n        this.msg = \"Sorry! All seats are reserved\";\n        return;\n      }\n\n      if (this.getSelectedEvent[0].event_price_per_person != null) {\n        this.type = 'virtual';\n        this.modals.payModal = true; //this.msg = \"Please Pay Engagement Fee to particpate\"\n\n        return;\n      }\n\n      this.sendEmail();\n      this.virtualParticipant(this.newEvent);\n      this.totalVirtual++;\n      this.modals.participateModal = true;\n      this.msg = \"Your Seat has been confirmed\";\n      this.shown = false;\n      return;\n    },\n    paidParticipant: function paidParticipant(price, by) {\n      if (this.type == 'in Person') {\n        this.sendEmail();\n        this.eventParticipant(this.newEvent);\n        var bill = {\n          user_id: this.newEvent.userId,\n          event_id: this.newEvent.id,\n          amount: price,\n          host_id: by\n        };\n        this.createBill(bill, by);\n        this.total++;\n        this.modals.payModal = false;\n        this.modals.participateModal = true;\n        this.msg = \"Your Seat has been confirmed\";\n        this.shown = false;\n        this.disablePay = false;\n        return;\n      }\n\n      if (this.type == 'virtual') {\n        this.sendEmail();\n        this.virtualParticipant(this.newEvent);\n        var _bill = {\n          user_id: this.newEvent.userId,\n          event_id: this.newEvent.id,\n          amount: price,\n          host_id: by\n        };\n        this.createBill(_bill);\n        this.totalVirtual++;\n        this.modals.payModal = false;\n        this.modals.participateModal = true;\n        this.msg = \"Your Seat has been confirmed\";\n        this.shown = false;\n        this.disablePay = false;\n        return;\n      }\n    },\n    viewProfile: function viewProfile(id) {\n      this.$router.push({\n        path: '/users/' + id\n      });\n    },\n    rateEngagementNow: function rateEngagementNow() {\n      this.submitEventRating.host_id = this.getSelectedEvent[0].created_by;\n      this.submitEventRating.user_id = this.newEvent.userId;\n      this.submitEventRating.event_id = this.$route.params.eventId;\n      this.saveRating(this.submitEventRating);\n      console.log(\"Feedback \" + this.submitEventRating.feedback);\n      console.log(\"Stars \" + this.submitEventRating.ratingStars);\n      console.log(\"Host \" + this.submitEventRating.host_id);\n      console.log(\"User \" + this.submitEventRating.user_id);\n      console.log(\"Event \" + this.submitEventRating.event_id);\n    },\n    sendEmail: function sendEmail() {\n      axios.post('https://us-central1-sparc-9d9cb.cloudfunctions.net/sendMail', {\n        dest: this.userEmail,\n        event: this.getSelectedEvent[0].event_name\n      }).then(function () {\n        console.log('Email Sent');\n      }).catch(function (err) {\n        return console.log(\"Error \" + err);\n      });\n    },\n    purchase: function purchase(userEmail, price) {\n      console.log('pay');\n      this.disablePay = true; //console.log(e)\n\n      var self = this;\n      stripe.createToken(card).then(function (result) {\n        if (result.error) {\n          self.hasCardErrors = true;\n          self.disablePay = false;\n          self.$forceUpdate(); // Forcing the DOM to update so the Stripe Element can update.\n\n          return;\n        } // Access the token with result.token\n\n\n        console.log(result);\n        console.log(price * 100);\n        axios.post('https://us-central1-sparc-9d9cb.cloudfunctions.net/CheckoutSession', {\n          amount: price * 100,\n          email: userEmail,\n          stripeToken: result.token\n        }).then(function (result) {\n          if (result.data.status == 'succeeded') {\n            self.paidParticipant(price, self.getSelectedEvent[0].created_by);\n          }\n        }).catch(function (err) {\n          self.disablePay = false;\n          console.log(err);\n        });\n      });\n    }\n  }),\n  created: function created() {\n    var _this6 = this;\n\n    this.fetchUser();\n    this.newEvent.id = this.$route.params.eventId;\n    this.fetchTags();\n    this.fetchParticipants(this.newEvent);\n    this.total = this.getParticipants.length;\n    this.fetchVirtualParticipants(this.newEvent);\n    this.totalVirtual = this.getVirtualParticipants.length;\n    console.log(this.totalVirtual);\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1;\n    var yyyy = today.getFullYear();\n    this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n    this.fetchEventById(this.newEvent);\n    var loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n\n    if (loggedUser != null) {\n      this.userEmail = loggedUser.email;\n      console.log(\"Email\");\n      console.log(this.userEmail);\n      this.newEvent.userId = loggedUser.id;\n      this.isUserLogged = true;\n\n      for (var key in loggedUser.events_attended) {\n        this.userEvents.push(loggedUser.events_attended[key]);\n      } // for(var key in this.getSelectedEvent[0].users_attending){\n      //   this.userEvents.push(this.getSelectedEvent[0].users_attending[key])\n      // }\n\n\n      if (this.userEvents.find(function (element) {\n        return element == _this6.newEvent.id;\n      })) {\n        this.isUserParticipant = true;\n        console.log(this.isUserParticipant);\n      }\n\n      for (var key in loggedUser.events_rated) {\n        this.ratedEvents.push(loggedUser.events_rated[key]);\n      }\n\n      if (this.ratedEvents.find(function (element) {\n        return element == _this6.newEvent.id;\n      })) {\n        this.isUserRated = true;\n        console.log(\"Rated\" + this.isUserRated);\n      }\n    } //this.getSelectedEventTags()\n    // console.log(\"Participants\")\n    // console.log(this.getParticipants)\n\n  },\n  watch: {\n    getParticipated: function getParticipated(val) {\n      var _this7 = this;\n\n      console.log('Watching');\n\n      if (val) {\n        setTimeout(function () {\n          if (val == 'success') {\n            _this7.success = true;\n            _this7.modals.payModal = false;\n            _this7.modals.participateModal = true;\n            _this7.msg = \"Your Seat Has Been Confirmed. Please check your Email\";\n            console.log(\"Confirmed\");\n            document.getElementById(\"myBtn\").style.display = 'none';\n          }\n        }, 500);\n      } else {\n        console.log('No Val');\n      }\n    },\n    ratingDone: function ratingDone(val) {\n      var _this8 = this;\n\n      if (val) {\n        setTimeout(function () {\n          if (val == 'success') {\n            _this8.isUserRated = true;\n            console.log(\"You Rated\");\n          }\n        }, 500);\n      }\n    }\n  }\n};",{"version":3,"sources":["EventDetails.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n <div>\n   <div class=\"main mt-5\">\n     <div class=\"section section-images\">\n       <div class=\"container\" id=\"top\">\n         <div class=\"col-md-12\">\n             <div class=\"row\">\n                 <div class=\"col-md-12\">\n                     <b-alert class=\"mb-5\" v-if=\"!success && success != null\" show variant=\"danger\" dismissible> <i class=\"fa fa-warning\"></i> {{msg}}</b-alert> <br/>\n                     <b-alert class=\"mb-5\" v-if=\"success\" show variant=\"success\" dismissible>{{msg}}</b-alert> <br/>\n                 </div>\n             </div>\n           <div class=\"row text-center\" id=\"card-margin\">\n               <div class=\"col-md-12\">\n               <h2 class=\"text-center ml-3 title title-up mb-5\">Engagement Details</h2>\n             </div>\n           </div>\n\n           <div class=\"row\" >\n             <div class=\"col-md-8\">\n               <b-card-group deck >\n                   <b-card border-variant=\"primary\" :img-src=\"getSelectedEvent[0].event_image == null ? noImage : getSelectedEvent[0].event_image\" img-height=\"300\" img-alt=\"Engagement image\" img-top>\n                       <!-- <img v-if=\"getSelectedEvent[0].event_image != null\" :src=\"getSelectedEvent[0].event_image\" width=\"500\" height=\"200\" alt=\"\">\n                       <img v-else src=\"../../public/sparclogo.png\" width=\"500\" height=\"200\" alt=\"\"> -->\n                       <b-card-text>\n                         <div class=\"row\">\n\n                         <div class=\"col-md-12\">\n                           <h5 class=\"text-success\"><b> {{ getSelectedEvent[0].event_name }}</b></h5>\n                           <h6> <star-rating v-model=\"eventRating\" :star-size=\"16\" disabled></star-rating></h6>\n\n                          </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"col-md-6\">\n                              <h6 class=\"text-info\"> <i class=\"fa fa-map-marker\"></i> {{ getSelectedEvent[0].event_location }}</h6>\n\n                             <h6 class=\"text-info\"> <i class=\"fa fa-clock-o\"></i> {{ getSelectedEvent[0].start_time + \" - \" + getSelectedEvent[0].end_time }} </h6>\n                             <h6 class=\"text-info\"> <i class=\"fa fa-calendar\"></i> {{ getSelectedEvent[0].date }}</h6>\n                             <h6 v-if=\"isUserLogged\" class=\"text-info\"> <i class=\"fa fa-mobile\"></i> {{ getSelectedEvent[0].host_contact }}</h6>\n                            </div>\n                            <div class=\"col-md-6\" v-if=\"isUserLogged\">\n                              <h6 class=\"text-info\"> <i class=\"fa fa-address-card-o\"></i> {{ getSelectedEvent[0].event_address }}</h6>\n                              <h6 class=\"text-info\"> <i class=\"fa fa-globe-americas\"></i> {{ getSelectedEvent[0].event_location_access }}</h6>\n                              <h6 class=\"text-info\"> <i class=\"fa fa-location-arrow\"></i> {{ getSelectedEvent[0].event_space }}</h6>\n                            </div>\n                          </div>\n                       </b-card-text>\n                   </b-card>\n               </b-card-group>\n\n               <b-card class=\"mt-3\" v-if=\"getSelectedEvent[0].event_video != null\">\n                 <h4 class=\"title-up text-info\">Engagement Video</h4>\n                 <div class=\"row\">\n                   <div class=\"col-md-12\">\n                     <video :src=\"getSelectedEvent[0].event_video\" controls height=\"300\" ></video>\n                   </div>\n               </div>\n               </b-card>\n\n               <b-card class=\"mt-3\" v-if=\"isUserParticipant && (getSelectedEvent[0].event_type == 'virtual' || getSelectedEvent[0].event_type == 'both')\">\n                 <h4 class=\"title-up text-info\">Engagement Links</h4>\n                 <div class=\"row\">\n                   <div class=\"col-md-4\">\n                     <h6 class=\"text-success\">Zoom:</h6>\n                   </div>\n                   <div class=\"col-md-8\">\n                     <h6>{{getSelectedEvent[0].zoom_link}}</h6>\n                   </div>\n                 </div>\n                 <div class=\"row\">\n                   <div class=\"col-md-4\">\n                     <h6 class=\"text-success\">Google Hangout:</h6>\n                   </div>\n                   <div class=\"col-md-8\">\n                     <h6>{{getSelectedEvent[0].google_link}}</h6>\n                   </div>\n                 </div>\n\n\n               </b-card>\n               <b-card class=\"mt-3\" v-if=\"Date.parse(currentDate) > Date.parse(getSelectedEvent[0].date) && isUserParticipant && !isUserRated\">\n                 <b-card-text>\n                   <div class=\"col-md-12\">\n                     <h4 class=\"title-up text-info\">Rate Your Experience</h4>\n                     <star-rating v-model=\"submitEventRating.ratingStars\" :star-size=\"36\" :increment=\"0.5\"></star-rating>\n                     <h6 class=\"mt-3\">Feedback</h6>\n                     <div class=\"row\">\n                       <div class=\"col-md-8\">\n                       <textarea class=\"form-control\" v-model=\"submitEventRating.feedback\" placeholder=\"Give your Feedback...\"></textarea>\n                     </div>\n                     <div class=\"col-md-3\">\n                       <button class=\"btn btn-success mt-3\" @click=\"rateEngagementNow\">Rate Now</button>\n                     </div>\n                     </div>\n                   </div>\n                 </b-card-text>\n               </b-card>\n               <b-card class=\"mt-2\" v-if=\"Date.parse(currentDate) > Date.parse(getSelectedEvent[0].date)\">\n                 <b-card-text>\n                   <h4 class=\"title-up text-info\">Engagement Reviews</h4>\n                   <div class=\"col-md-12\" v-for=\"(rating, index) in getRatings\" :key=\"index\">\n                     <h6 class=\"text-success\">{{getUserDetails(rating.user_id).first_name}}</h6>\n                     <star-rating :rating=\"rating.ratingStars\" :read-only=\"true\" :star-size=\"16\" :increment=\"0.5\"></star-rating>\n                     <strong>{{rating.feedback}}</strong>\n                     <hr>\n                   </div>\n                 </b-card-text>\n               </b-card>\n             </div>\n             <div class=\"col-md-4\">\n                 <div class=\"event-info\">\n                     <h5 class=\"text-info\"><b>Engagement Description</b></h5>\n                     <p>{{ getSelectedEvent[0].event_description }}</p>\n                     <h6 class=\"text-danger text-center\"></h6>\n                     <a class=\"btn btn-success text-white btn-block\" id=\"myBtn\" @click=\"participateEvent\" v-if=\"Date.parse(currentDate) <= Date.parse(getSelectedEvent[0].date) && shown \"> <span v-if=\"participated\">You are Already Signed Up</span> <span v-if=\"!participated\">PARTICIPATE NOW</span> </a>\n                     <button class=\"btn btn-danger btn-block\" v-else-if=\"Date.parse(currentDate) > Date.parse(getSelectedEvent[0].date)\" disabled>Engagement Expired</button>\n                 </div>\n                 <div class=\"event-info mt-2\">\n                     <h5 class=\"text-info\"><b>Engagement Extras</b></h5>\n                     <h6><b class=\"text-success\">Engagement Free: </b> {{getSelectedEvent[0].event_free}}</h6>\n                     <h6><b class=\"text-success\">Engagement Type: </b> {{getSelectedEvent[0].event_type}}</h6>\n                     <h6 v-if=\"getSelectedEvent[0].event_cause1 != null\"><b class=\"text-success\">Charity 1: </b> {{getSelectedEvent[0].charity1 + \" (\" + getSelectedEvent[0].event_cause1 + \"%)\"}} </h6>\n                     <h6 v-if=\"getSelectedEvent[0].event_cause2 != null\"><b class=\"text-success\">Charity 2: </b> {{getSelectedEvent[0].charity2 + \" (\" + getSelectedEvent[0].event_cause2 + \"%)\"}}</h6>\n                     <h6 v-if=\"getSelectedEvent[0].event_price_per_person != null\"><b class=\"text-success\">Engagement Price: </b> $ {{getSelectedEvent[0].event_price_per_person}} PER PERSON</h6>\n                     <h6><b class=\"text-success\">Engagement Cause: </b> {{getSelectedEvent[0].cause}}</h6>\n\n                     <h6 v-if=\"getSelectedEvent[0].capacity != null\"><b class=\"text-success\">People capacity: </b> {{getSelectedEvent[0].capacity}}</h6>\n                     <h6 v-if=\"getSelectedEvent[0].capacity != null\"><b class=\"text-success\">Seats Reserved: </b> {{total}}</h6>\n                     <div v-if=\"getSelectedEvent[0].capacity == null && getSelectedEvent[0].virtual_capacity != null\">\n                       <h6><b class=\"text-success\">Virtual capacity: </b> {{getSelectedEvent[0].virtual_capacity}}</h6>\n                       <h6><b class=\"text-success\">Seats Reserved: </b> {{totalVirtual}}</h6>\n                     </div>\n                     <div v-if=\"getSelectedEvent[0].capacity != null && getSelectedEvent[0].virtual_capacity != null\">\n                       <h6><b class=\"text-success\">Virtual capacity: </b> {{getSelectedEvent[0].virtual_capacity}}</h6>\n                       <h6><b class=\"text-success\">Seats Reserved: </b> {{totalVirtual}}</h6>\n                     </div>\n\n                     <h5 class=\"text-info mt-4\"><b>Engagement Tags</b></h5>\n                     <span class=\"badge badge-pill badge-success\" v-for=\"(tag,index) in getEventTags\" :key=\"index\">{{tag.value}}</span>\n                 </div>\n                 <div class=\"event-info mt-2\">\n                   <h5 class=\"text-info\"><b>Host Information</b></h5>\n                    <p style=\"display:none;\">{{getUserDetails(getSelectedEvent[0].created_by) }}</p>\n                    <img class=\"rounded-circle\" v-if=\"userDetails.profile_image != null\" :src=\"userDetails.profile_image\" width=\"30\" alt=\"\">\n                    <span class=\"ml-3\" v-if=\"userDetails.first_name != undefined\">\n                      <b>{{userDetails.first_name + \" \" + userDetails.last_name}}</b>\n                    </span>\n                    <button class=\"btn btn-info btn-block\" @click=\"viewProfile(getSelectedEvent[0].created_by)\">View Profile</button>\n                 </div>\n                 <div class=\"mb-5\">\n                   <div class=\"event-info mt-2\" v-if=\"getSelectedEvent[0].event_type == 'in Person' || getSelectedEvent[0].event_type == 'both'\">\n                  <h5 class=\"text-info\"><b>In Person Participants</b></h5>\n                     <div class=\"col-md-12\" v-for=\"(user, index) in getParticipantsList\" :key=\"index\">\n                       <strong class=\"text-success\">{{ user.first_name + \" \" + user.last_name}}</strong>\n                     </div>\n                 </div>\n                 <div class=\"event-info mt-2\" v-if=\"getSelectedEvent[0].event_type == 'virtual' || getSelectedEvent[0].event_type == 'both'\">\n                   <h5 class=\"text-info\"><b>Virtual Participants</b></h5>\n                     <div class=\"col-md-12\" v-for=\"(user, index) in getVirtualParticipantsList\" :key=\"index\">\n                       <strong class=\"text-success\">{{ user.first_name + \" \" + user.last_name}}</strong>\n                     </div>\n                 </div>\n                 </div>\n\n             </div>\n           </div>\n         </div>\n       </div>\n     </div>\n   </div>\n   <modal :show.sync=\"modals.participateModal\" headerClasses=\"justify-content-center\">\n     <h4 slot=\"header\" class=\"title title-up\">Event Participation</h4>\n     <h4 class=\"text-danger text-center\">{{msg}}</h4>\n     <a class=\"btn btn-success text-center text-white btn-block\" v-clipboard=\"() => url\" v-clipboard:success=\"clipboardSuccessHandler\">Copy Link</a>\n     <button class=\"btn btn-danger btn-block\" @click=\"dismiss\">Close</button>\n   </modal>\n\n   <modal :show.sync=\"modals.selectModal\" headerClasses=\"justify-content-center\">\n     <h4 slot=\"header\" class=\"title title-up\">I want to Participate in</h4>\n     <div class=\"row\">\n         <div class=\"col-md-2\"></div>\n         <div class=\"col-md-4\">\n           <button class=\"btn btn-warning\" @click=\"virtualClick\"> <i class=\"fa fa-video-camera\"></i> Virtual</button>\n         </div>\n       <div class=\"col-md-4\">\n         <button class=\"btn btn-info\" @click=\"inPersonClick\"><i class=\"fa fa-user\"></i> In Person</button>\n       </div>\n\n     </div>\n     <a class=\"btn btn-success text-center text-white btn-block\" v-clipboard=\"() => url\" v-clipboard:success=\"clipboardSuccessHandler\">Copy Link</a>\n     <button class=\"btn btn-danger btn-block\" @click=\"dismiss\">Close</button>\n     </modal>\n\n     <modal :show.sync=\"modals.payModal\" headerClasses=\"justify-content-center\">\n       <h4 slot=\"header\" class=\"text-danger text-center\">Please Pay Participation Amount to Continue</h4>\n       <div ref=\"card\"></div>\n       <button class=\"btn btn-primary btn-block\" :disabled=\"disablePay\" v-on:click=\"purchase(userEmail, getSelectedEvent[0].event_price_per_person)\">Pay Now</button>\n     </modal>\n\n </div>\n</template>\n<script>\nlet stripe = Stripe(`pk_test_VkqrGCFhu1QHtAQJ5xtAYdIH00dooEGlrN`),\n   elements = stripe.elements(),\n   card = undefined;\nimport { Parallax, FormGroupInput, Alert, Modal } from '@/components';\nimport axios from 'axios'\nimport { mapGetters, mapActions } from 'vuex'\nexport default {\n name: 'event-details',\n bodyClass: 'event-details-page',\n destroyed() {\n   card.destroy(this.$refs.card)\n },\n  mounted: function () {\n\n    let style = {\n     base: {\n       color: '#32325d',\n       fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n       fontSmoothing: 'antialiased',\n       fontSize: '16px',\n       '::placeholder': {\n         color: '#aab7c4'\n       }\n     },\n     invalid: {\n       color: '#fa755a',\n       iconColor: '#fa755a'\n     }\n\n   };\n   card = elements.create('card', {style: style});\n   card.mount(this.$refs.card);\n },\n components: {\n   Parallax,\n   Alert,\n   Modal,\n   [FormGroupInput.name]: FormGroupInput,\n },\n data() {\n   return {\n\n     noImage: require('../../public/sparcS.png'),\n     modals: {\n       participateModal: false,\n       selectModal: false,\n       payModal: false\n     },\n     url: window.location.href,\n     rating: 0,\n     eventRating: 5,\n     success: null,\n     event: [],\n     fetchedTags: [],\n     tagName: [],\n     newEvent: {\n         id: null,\n         userId: null\n     },\n     msg: null,\n     userEvents: [],\n     ratedEvents: [],\n     total: 0,\n     totalVirtual: 0,\n     currentDate: null,\n     userDetails: {},\n     participated: false,\n     participantsList: [],\n\n     submitEventRating: {\n       ratingStars: null,\n       feedback: null,\n       host_id: null,\n       event_id: null,\n       user_id: null,\n     },\n\n     isUserParticipant: false,\n     isUserRated: false,\n     isUserLogged: false,\n     fetchedRatings: [],\n     shown: true,\n     userEmail: null,\n     type: null,\n     disablePay: false\n   }\n },\n computed: {\n   ...mapGetters(['getSelectedEvent', 'allTags', 'getParticipants', 'getVirtualParticipants', 'user','allUsers', 'allRatings', 'ratingDone']),\n\n   getEventTags() {\n       this.fetchedTags = this.getSelectedEvent[0].tags\n       return this.fetchedTags.map(element => {\n           let eventTag = this.allTags.find(tag => tag.id==element)\n           return eventTag\n       });\n   },\n\n   getParticipantsList() {\n     this.participantsList = [];\n     return this.getParticipants.map(item => {\n       let user_item = this.allUsers.find(user => user.id == item)\n         return user_item\n     })\n   },\n\n   getVirtualParticipantsList() {\n     return this.getVirtualParticipants.map(item => {\n       let user_item = this.allUsers.find(user => user.id == item)\n         return user_item\n     })\n   },\n\n   getRatings() {\n     this.fetchedRatings = [];\n     let rating = this.allRatings.filter(item => item.event_id == this.newEvent.id)\n     return rating;\n   }\n },\n methods: {\n   ...mapActions(['fetchEventById','createBill', 'fetchVirtualParticipants', 'fetchRatings', 'fetchTags', 'fetchParticipants', 'eventParticipant', 'virtualParticipant', 'fetchUser', 'fetchUserById', 'saveRating']),\n   dismiss() {\n     this.modals.participateModal = false\n     this.modals.selectModal = false\n   },\n   inPersonClick() {\n     this.inPersonParticipate();\n   },\n   virtualClick() {\n     console.log(this.getSelectedEvent[0].virtual_capacity)\n     this.virtualParticipate();\n   },\n   copyLink() {\n     var copyText = window.location.href;\n     console.log(copyText)\n     document.execCommand(\"copy\");\n   },\n   clipboardSuccessHandler({ value, event }) {\n       console.log('success', value)\n   },\n   getUserDetails(id) {\n\n     // let ref = this;\n      let user_obj=this.allUsers.find(user_item=>user_item.id==id)\n      this.userDetails = user_obj\n      return user_obj\n   },\n   participateEvent() {\n     const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n     if(loggedUser != null) {\n       // for(var key in this.getSelectedEvent[0].users_attending){\n       //     this.userEvents.push(this.getSelectedEvent[0].users_attending[key])\n       // }\n       console.log(this.userEvents)\n       if(this.userEvents.find(element => element == this.newEvent.id)) {\n         console.log(\"Already Signed Up\")\n         this.msg = \"You are Already Signed Up\"\n         this.modals.participateModal = true\n         this.participated = true\n         return;\n       }\n       if(this.getSelectedEvent[0].event_type == 'in Person'){\n         this.inPersonParticipate();\n       }\n       if(this.getSelectedEvent[0].event_type == 'virtual'){\n         this.virtualParticipate();\n       }\n       if(this.getSelectedEvent[0].event_type == 'both') {\n         this.modals.selectModal = true\n         return;\n       }\n     }\n     else {\n       this.modals.participateModal = true\n       this.msg = \"Please Login to Participate\"\n     }\n   },\n\n   inPersonParticipate() {\n     this.modals.selectModal = false\n     if(this.total >= this.getSelectedEvent[0].capacity) {\n       this.modals.participateModal = true\n       this.msg = \"Sorry! All seats are reserved\"\n       return;\n     }\n     if(this.getSelectedEvent[0].event_price_per_person != null){\n       this.type = 'in Person'\n       this.modals.payModal = true\n       //this.msg = \"Please Pay Engagement Fee to particpate\"\n       return;\n     }\n\n     this.sendEmail()\n     this.eventParticipant(this.newEvent)\n     this.total++;\n     this.modals.participateModal = true\n     this.msg = \"Your Seat has been confirmed\"\n     this.shown = false\n     return;\n\n   },\n\n   virtualParticipate() {\n     this.modals.selectModal = false\n     if(this.totalVirtual >= this.getSelectedEvent[0].virtual_capacity) {\n       this.modals.participateModal = true\n       this.msg = \"Sorry! All seats are reserved\"\n       return;\n     }\n     if(this.getSelectedEvent[0].event_price_per_person != null){\n       this.type = 'virtual'\n       this.modals.payModal = true\n       //this.msg = \"Please Pay Engagement Fee to particpate\"\n       return;\n     }\n     this.sendEmail()\n     this.virtualParticipant(this.newEvent);\n     this.totalVirtual++;\n     this.modals.participateModal = true\n     this.msg = \"Your Seat has been confirmed\"\n     this.shown = false\n     return;\n   },\n\n   paidParticipant(price, by) {\n     if(this.type == 'in Person') {\n       this.sendEmail()\n       this.eventParticipant(this.newEvent)\n       const bill = {\n         user_id: this.newEvent.userId,\n         event_id: this.newEvent.id,\n         amount: price,\n         host_id: by\n       }\n       this.createBill(bill, by);\n       this.total++;\n       this.modals.payModal = false\n       this.modals.participateModal = true\n       this.msg = \"Your Seat has been confirmed\"\n       this.shown = false\n       this.disablePay = false\n       return;\n     }\n     if(this.type == 'virtual') {\n       this.sendEmail()\n       this.virtualParticipant(this.newEvent);\n       const bill = {\n         user_id: this.newEvent.userId,\n         event_id: this.newEvent.id,\n         amount: price,\n         host_id: by\n       }\n       this.createBill(bill);\n       this.totalVirtual++;\n       this.modals.payModal = false\n       this.modals.participateModal = true\n       this.msg = \"Your Seat has been confirmed\"\n       this.shown = false\n       this.disablePay = false\n       return;\n     }\n   },\n\n   viewProfile(id) {\n     this.$router.push({path:'/users/'+id})\n   },\n\n   rateEngagementNow() {\n     this.submitEventRating.host_id = this.getSelectedEvent[0].created_by;\n     this.submitEventRating.user_id = this.newEvent.userId;\n     this.submitEventRating.event_id = this.$route.params.eventId;\n\n     this.saveRating(this.submitEventRating);\n\n     console.log(\"Feedback \" +  this.submitEventRating.feedback)\n     console.log(\"Stars \" +  this.submitEventRating.ratingStars)\n     console.log(\"Host \" +  this.submitEventRating.host_id)\n     console.log(\"User \" +  this.submitEventRating.user_id)\n     console.log(\"Event \" +  this.submitEventRating.event_id)\n   },\n\n   sendEmail() {\n     axios.post('https://us-central1-sparc-9d9cb.cloudfunctions.net/sendMail', {\n       dest: this.userEmail,\n       event: this.getSelectedEvent[0].event_name\n     }).then(() => {\n       console.log('Email Sent')\n     }).catch(err => console.log(\"Error \" + err))\n   },\n   purchase(userEmail, price) {\n     console.log('pay')\n     this.disablePay = true\n     //console.log(e)\n     var self = this;\n   stripe.createToken(card).then(function(result) {\n     if (result.error) {\n       self.hasCardErrors = true;\n       self.disablePay = false;\n       self.$forceUpdate(); // Forcing the DOM to update so the Stripe Element can update.\n       return;\n     }\n     // Access the token with result.token\n     console.log(result)\n     console.log(price*100)\n     axios.post('https://us-central1-sparc-9d9cb.cloudfunctions.net/CheckoutSession', {\n       amount: price*100,\n       email: userEmail,\n       stripeToken: result.token\n     }).then(result => {\n         if(result.data.status == 'succeeded'){\n\n           self.paidParticipant(price, self.getSelectedEvent[0].created_by);\n         }\n       }).catch(err => {\n         self.disablePay = false;\n         console.log(err)\n       })\n\n   });\n }\n },\n created() {\n\n   this.fetchUser();\n   this.newEvent.id = this.$route.params.eventId\n   this.fetchTags();\n   this.fetchParticipants(this.newEvent);\n   this.total = this.getParticipants.length;\n\n   this.fetchVirtualParticipants(this.newEvent);\n   this.totalVirtual = this.getVirtualParticipants.length;\n   console.log(this.totalVirtual)\n\n   var today = new Date();\n   var dd = today.getDate();\n   var mm = today.getMonth() + 1;\n   var yyyy = today.getFullYear();\n\n   this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n\n   this.fetchEventById(this.newEvent);\n\n   const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n   if(loggedUser != null) {\n       this.userEmail = loggedUser.email\n       console.log(\"Email\")\n     console.log(this.userEmail)\n       this.newEvent.userId = loggedUser.id\n       this.isUserLogged = true;\n       for(var key in loggedUser.events_attended){\n         this.userEvents.push(loggedUser.events_attended[key])\n       }\n       // for(var key in this.getSelectedEvent[0].users_attending){\n       //   this.userEvents.push(this.getSelectedEvent[0].users_attending[key])\n       // }\n       if(this.userEvents.find(element => element == this.newEvent.id)) {\n         this.isUserParticipant = true\n         console.log(this.isUserParticipant)\n       }\n\n       for(var key in loggedUser.events_rated) {\n         this.ratedEvents.push(loggedUser.events_rated[key])\n       }\n       if(this.ratedEvents.find(element => element == this.newEvent.id)) {\n         this.isUserRated = true\n         console.log(\"Rated\" + this.isUserRated)\n       }\n\n\n   }\n\n\n\n   //this.getSelectedEventTags()\n\n   // console.log(\"Participants\")\n   // console.log(this.getParticipants)\n\n\n },\n watch: {\n     getParticipated(val) {\n       console.log('Watching')\n         if(val) {\n             setTimeout(() => {\n                 if(val == 'success'){\n                   this.success = true\n                   this.modals.payModal = false\n                   this.modals.participateModal = true\n                   this.msg = \"Your Seat Has Been Confirmed. Please check your Email\"\n                   console.log(\"Confirmed\")\n                   document.getElementById(\"myBtn\").style.display = 'none';\n                 }\n               }, 500)\n         }\n         else {\n           console.log('No Val')\n         }\n     },\n\n     ratingDone(val) {\n       if(val) {\n         setTimeout(() => {\n                 if(val == 'success'){\n                   this.isUserRated = true\n                   console.log(\"You Rated\")\n                 }\n               }, 500)\n       }\n     }\n }\n};\n</script>\n<style scoped>\n input[type=\"text\"] {\n   color: #fff;\n }\n #image {\n     max-width: 100%;\n     width: 100%;\n     height: 400px;\n }\n #card-margin {\n     margin-top: -70px;\n }\n .event-info {\n   padding: 10px;\n   border: 2px solid #e5e5e5;\n }\n #top {\n   margin-top: -70px;\n }\n\n .StripeElement {\n box-sizing: border-box;\n\n height: 40px;\n\n padding: 10px 12px;\n\n border: 1px solid transparent;\n border-radius: 4px;\n background-color: white;\n\n box-shadow: 0 1px 3px 0 #e6ebf1;\n -webkit-transition: box-shadow 150ms ease;\n transition: box-shadow 150ms ease;\n}\n\n.StripeElement--focus {\n box-shadow: 0 1px 3px 0 #cfd7df;\n}\n\n.StripeElement--invalid {\n border-color: #fa755a;\n}\n\n.StripeElement--webkit-autofill {\n background-color: #fefde5 !important;\n}\n</style>\n"],"sourceRoot":"src/pages"}]}