{"remainingRequest":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/thread-loader/dist/cjs.js!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/eslint-loader/index.js??ref--13-0!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/store/modules/events.js","dependencies":[{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/store/modules/events.js","mtime":1569422283384},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar state = {\n  events: [],\n  participants: [],\n  virtual_participants: [],\n  participated: null,\n  selectedEvent: [],\n  eventCreated: null,\n  charities: []\n};\nvar getters = {\n  getEvents: function getEvents(state) {\n    return state.events;\n  },\n  getParticipants: function getParticipants(state) {\n    return state.participants;\n  },\n  getVirtualParticipants: function getVirtualParticipants(state) {\n    return state.virtual_participants;\n  },\n  getParticipated: function getParticipated(state) {\n    return state.participated;\n  },\n  getSelectedEvent: function getSelectedEvent(state) {\n    return state.selectedEvent;\n  },\n  eventCreated: function eventCreated(state) {\n    return state.eventCreated;\n  },\n  charities: function charities(state) {\n    return state.charities;\n  }\n};\nvar actions = {\n  createEvent: function createEvent(_ref, payload) {\n    var commit = _ref.commit;\n    commit('unsetEventCreated', 'failed');\n\n    if (payload.event_image == null) {\n      firebase.database().ref('events').push(payload).then(function (event) {\n        var key = event.key;\n        firebase.auth().onAuthStateChanged(function (user) {\n          if (user) {\n            firebase.database().ref('users').child(user.uid).child('events_hosted').push(key).then(function () {\n              console.log('Event Registered');\n              commit('setEventCreated', 'success');\n            });\n          }\n        });\n      }).catch(function (err) {\n        return console.log(err.message);\n      });\n    } else {\n      var storageRef = firebase.storage().ref('event_images/' + payload.event_image.name);\n      var uploadTask = storageRef.put(payload.event_image);\n      uploadTask.on('state_changed', function (snapshot) {}, function (err) {\n        console.log(err.message);\n      }, function () {\n        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          payload.event_image = downloadURL;\n          console.log(\"After \" + payload.event_image);\n        }).then(function () {\n          if (payload.event_video != null) {\n            var videoRef = firebase.storage().ref('event_videos/' + payload.event_video.name);\n            var uploadVideo = videoRef.put(payload.event_video);\n            uploadVideo.on('state_changed', function (snapshot) {}, function (err) {\n              console.log(err.message);\n            }, function () {\n              uploadVideo.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                payload.event_video = downloadURL;\n                console.log(\"After \" + payload.event_video);\n              }).then(function () {\n                firebase.database().ref('events').push(payload).then(function (event) {\n                  var key = event.key;\n                  firebase.auth().onAuthStateChanged(function (user) {\n                    if (user) {\n                      firebase.database().ref('users').child(user.uid).child('events_hosted').push(key).then(function () {\n                        console.log('Event Registered');\n                        commit('setEventCreated', 'success');\n                      });\n                    }\n                  });\n                }).catch(function (err) {\n                  return console.log(err.message);\n                });\n              });\n            });\n          } else {\n            firebase.database().ref('events').push(payload).then(function (event) {\n              var key = event.key;\n              firebase.auth().onAuthStateChanged(function (user) {\n                if (user) {\n                  firebase.database().ref('users').child(user.uid).child('events_hosted').push(key).then(function () {\n                    console.log('Event Registered');\n                    commit('setEventCreated', 'success');\n                  });\n                }\n              });\n            }).catch(function (err) {\n              return console.log(err.message);\n            });\n          }\n        });\n      });\n    }\n  },\n  fetchEventById: function () {\n    var _fetchEventById = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref2, eventObj) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref2.commit;\n              commit('unSetSelectedEvent');\n              _context.next = 4;\n              return firebase.database().ref('events').child(eventObj.id).on('value', function (snapshot) {\n                //console.log(snapshot.val())\n                commit('setSelectedEvent', snapshot.val());\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchEventById(_x, _x2) {\n      return _fetchEventById.apply(this, arguments);\n    }\n\n    return fetchEventById;\n  }(),\n  fetchEvents: function () {\n    var _fetchEvents = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref3) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref3.commit;\n              commit('unSetEvents');\n              _context2.next = 4;\n              return firebase.database().ref('events').on('child_added', function (snapshot) {\n                commit('setEvents', _objectSpread({}, snapshot.val(), {\n                  id: snapshot.key\n                }));\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function fetchEvents(_x3) {\n      return _fetchEvents.apply(this, arguments);\n    }\n\n    return fetchEvents;\n  }(),\n  eventParticipant: function eventParticipant(_ref4, eventObj) {\n    var commit = _ref4.commit;\n    commit('unSetSelectedEvent');\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        firebase.database().ref('events').child(eventObj.id).child('users_attending').push(user.uid).then(function () {\n          firebase.database().ref('users').child(user.uid).child('events_attended').push(eventObj.id).then(function () {\n            commit('unSetSelectedEvent');\n            commit('setParticipated', 'success');\n            firebase.database().ref('events').child(eventObj.id).on('value', function (snapshot) {\n              commit('setSelectedEvent', snapshot.val());\n            });\n          }).catch(function (err) {\n            console.log(err);\n            commit('setParticipated', 'failed');\n          });\n        }).catch(function (err) {\n          console.log(err);\n          commit('setParticipated', 'failed');\n        });\n      } else {\n        commit('setParticipated', 'failed');\n      }\n    });\n  },\n  virtualParticipant: function virtualParticipant(_ref5, eventObj) {\n    var commit = _ref5.commit;\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        firebase.database().ref('events').child(eventObj.id).child('virtual_attending').push(user.uid).then(function () {\n          firebase.database().ref('users').child(user.uid).child('events_attended').push(eventObj.id).then(function () {\n            commit('unSetSelectedEvent');\n            commit('setParticipated', 'success');\n            firebase.database().ref('events').child(eventObj.id).on('value', function (snapshot) {\n              commit('setSelectedEvent', snapshot.val());\n            });\n          }).catch(function (err) {\n            console.log(err);\n            commit('setParticipated', 'failed');\n          });\n        }).catch(function (err) {\n          console.log(err);\n          commit('setParticipated', 'failed');\n        });\n      } else {\n        commit('setParticipated', 'failed');\n      }\n    });\n  },\n  fetchParticipants: function fetchParticipants(_ref6, eventId) {\n    var commit = _ref6.commit;\n    commit('unSetParticipants');\n    firebase.database().ref('events').child(eventId.id).child('users_attending').on('child_added', function (snapshot) {\n      commit('setParticipants', snapshot.val());\n    });\n  },\n  fetchVirtualParticipants: function fetchVirtualParticipants(_ref7, eventId) {\n    var commit = _ref7.commit;\n    commit('unSetVirtualParticipants');\n    firebase.database().ref('events').child(eventId.id).child('virtual_attending').on('child_added', function (snapshot) {\n      commit('setVirtualParticipants', snapshot.val());\n    });\n  },\n  fetchCharities: function fetchCharities(_ref8) {\n    var commit = _ref8.commit;\n    commit('unsetCharities');\n    firebase.database().ref('charities').on('child_added', function (snapshot) {\n      commit('setCharities', _objectSpread({}, snapshot.val(), {\n        id: snapshot.key\n      }));\n    });\n  },\n  // Delete Event\n  eventDelete: function eventDelete(_ref9, id) {\n    var commit = _ref9.commit,\n        state = _ref9.state;\n    var event = {\n      deleted: true\n    };\n    var upd_item = state.events.find(function (event_item) {\n      return event_item.id == id;\n    });\n    var index = state.events.indexOf(upd_item); // state.events[index].deleted=true\n\n    console.log(index); // console.log(state.events[index])\n\n    commit('updateEvents', index); // console.log(state.events.find(event_item=>event_item.id==id))\n\n    firebase.database().ref('events').child(id).update(event).then(function () {// let upd_item=state.events.find(event_item=>event_item.id==id)\n      // commit('unSetEvents');\n      // firebase.database().ref('events').on('child_added', snapshot => {\n      //     commit('setEvents', {\n      //         ...snapshot.val(),\n      //         id: snapshot.key\n      //     })\n      // })\n    });\n  }\n};\nvar mutations = {\n  setEvents: function setEvents(state, payload) {\n    return state.events.push(payload);\n  },\n  unSetEvents: function unSetEvents(state) {\n    return state.events = [];\n  },\n  setSelectedEvent: function setSelectedEvent(state, payload) {\n    return state.selectedEvent.push(payload);\n  },\n  unSetSelectedEvent: function unSetSelectedEvent(state) {\n    return state.selectedEvent = [];\n  },\n  unSetParticipants: function unSetParticipants(state) {\n    return state.participants = [];\n  },\n  setParticipants: function setParticipants(state, payload) {\n    return state.participants.push(payload);\n  },\n  setParticipated: function setParticipated(state, payload) {\n    state.participated = payload;\n  },\n  unsetEventCreated: function unsetEventCreated(state, payload) {\n    return state.eventCreated = payload;\n  },\n  setEventCreated: function setEventCreated(state, payload) {\n    return state.eventCreated = payload;\n  },\n  unSetVirtualParticipants: function unSetVirtualParticipants(state) {\n    return state.virtual_participants = [];\n  },\n  setVirtualParticipants: function setVirtualParticipants(state, payload) {\n    return state.virtual_participants.push(payload);\n  },\n  setCharities: function setCharities(state, payload) {\n    return state.charities.push(payload);\n  },\n  unsetCharities: function unsetCharities(state) {\n    return state.charities = [];\n  },\n  updateEvents: function updateEvents(state, index) {\n    state.events[index].delete = true;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/store/modules/events.js"],"names":["state","events","participants","virtual_participants","participated","selectedEvent","eventCreated","charities","getters","getEvents","getParticipants","getVirtualParticipants","getParticipated","getSelectedEvent","actions","createEvent","payload","commit","event_image","firebase","database","ref","push","then","event","key","auth","onAuthStateChanged","user","child","uid","console","log","catch","err","message","storageRef","storage","name","uploadTask","put","on","snapshot","getDownloadURL","downloadURL","event_video","videoRef","uploadVideo","fetchEventById","eventObj","id","val","fetchEvents","eventParticipant","virtualParticipant","fetchParticipants","eventId","fetchVirtualParticipants","fetchCharities","eventDelete","deleted","upd_item","find","event_item","index","indexOf","update","mutations","setEvents","unSetEvents","setSelectedEvent","unSetSelectedEvent","unSetParticipants","setParticipants","setParticipated","unsetEventCreated","setEventCreated","unSetVirtualParticipants","setVirtualParticipants","setCharities","unsetCharities","updateEvents","delete"],"mappings":"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","sourcesContent":["const state = {\n    events: [],\n    participants: [],\n    virtual_participants: [],\n    participated: null,\n    selectedEvent: [],\n    eventCreated: null,\n    charities: []\n};\n\nconst getters = {\n    getEvents: state => state.events,\n    getParticipants: state => state.participants,\n    getVirtualParticipants: state => state.virtual_participants,\n    getParticipated: (state) => {\n        return state.participated\n    },\n    getSelectedEvent: state => state.selectedEvent,\n\n    eventCreated: state => state.eventCreated,\n\n    charities: state => state.charities\n};\n\nconst actions = {\n    createEvent({commit}, payload) {\n        commit('unsetEventCreated', 'failed')\n        if(payload.event_image == null) {\n            firebase.database().ref('events').push(payload).then(event => {\n                const key = event.key;\n                firebase.auth().onAuthStateChanged(user => {\n                    if(user) {\n                        firebase.database().ref('users').child(user.uid).child('events_hosted').push(key)\n                        .then(() => {\n                            console.log('Event Registered')\n                            commit('setEventCreated', 'success')\n                        })\n                    }\n                })\n            }).catch(err => console.log(err.message));\n        }\n        else {\n            var storageRef = firebase.storage().ref('event_images/'+payload.event_image.name);\n            let uploadTask = storageRef.put(payload.event_image);\n\n            uploadTask.on('state_changed', snapshot => {\n            \n            }, function(err){\n                console.log(err.message);\n            }, function() {\n                uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                    payload.event_image = downloadURL;\n                    console.log(\"After \" + payload.event_image);\n                }).then(() => {\n                    if(payload.event_video != null) {\n                        var videoRef = firebase.storage().ref('event_videos/'+payload.event_video.name);\n                        let uploadVideo = videoRef.put(payload.event_video);\n\n                        uploadVideo.on('state_changed', snapshot => {\n                        }, function(err){\n                            console.log(err.message);\n                        }, function() {\n                                uploadVideo.snapshot.ref.getDownloadURL().then(downloadURL => {\n                                payload.event_video = downloadURL;\n                                console.log(\"After \" + payload.event_video);\n                            }).then(() => {\n                                firebase.database().ref('events').push(payload).then(event => {\n                                    const key = event.key;\n                                    firebase.auth().onAuthStateChanged(user => {\n                                        if(user) {\n                                            firebase.database().ref('users').child(user.uid).child('events_hosted').push(key)\n                                            .then(() => {\n                                                console.log('Event Registered')\n                                                commit('setEventCreated', 'success')\n                                            })\n                                        }\n                                    })\n                                    \n                                }).catch(err => console.log(err.message));\n                            })\n                        })\n                    }\n                    else {\n                        firebase.database().ref('events').push(payload).then(event => {\n                            const key = event.key;\n                            firebase.auth().onAuthStateChanged(user => {\n                                if(user) {\n                                    firebase.database().ref('users').child(user.uid).child('events_hosted').push(key)\n                                    .then(() => {\n                                        console.log('Event Registered')\n                                        commit('setEventCreated', 'success')\n                                    })\n                                }\n                            })\n                        }).catch(err => console.log(err.message));\n                    }\n                })\n            })\n        }  \n    },\n\n    async fetchEventById({commit}, eventObj) {\n        commit('unSetSelectedEvent');\n        await firebase.database().ref('events').child(eventObj.id).on('value', snapshot => {\n            //console.log(snapshot.val())\n            commit('setSelectedEvent', snapshot.val())\n        })\n    },\n\n    async fetchEvents({commit}) {\n        commit('unSetEvents');\n        await firebase.database().ref('events').on('child_added', snapshot => {\n            commit('setEvents', {\n                ...snapshot.val(),\n                id: snapshot.key\n            })\n        })\n    },\n\n    eventParticipant({commit}, eventObj) {\n        commit('unSetSelectedEvent');\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                firebase.database().ref('events').child(eventObj.id).child('users_attending').push(user.uid)\n                .then(() => {\n                    firebase.database().ref('users').child(user.uid).child('events_attended').push(eventObj.id)\n                    .then(() => {\n                        commit('unSetSelectedEvent');\n                        commit('setParticipated', 'success')\n                        firebase.database().ref('events').child(eventObj.id).on('value', snapshot => {\n                            commit('setSelectedEvent', snapshot.val())\n                        })\n                    }).catch(err => {\n                        console.log(err)\n                        commit('setParticipated', 'failed')\n                    })\n                }).catch(err => {\n                    console.log(err)\n                    commit('setParticipated', 'failed')\n                })\n            }\n            else {\n                commit('setParticipated', 'failed')\n            }\n        })\n    },\n\n    virtualParticipant({commit}, eventObj) {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                firebase.database().ref('events').child(eventObj.id).child('virtual_attending').push(user.uid)\n                .then(() => {\n                    firebase.database().ref('users').child(user.uid).child('events_attended').push(eventObj.id)\n                    .then(() => {\n                        commit('unSetSelectedEvent');\n                        commit('setParticipated', 'success')\n                        firebase.database().ref('events').child(eventObj.id).on('value', snapshot => {\n                            commit('setSelectedEvent', snapshot.val())\n                        })\n                    }).catch(err => {\n                        console.log(err)\n                        commit('setParticipated', 'failed')\n                    })\n                }).catch(err => {\n                    console.log(err)\n                    commit('setParticipated', 'failed')\n                })\n            }\n            else {\n                commit('setParticipated', 'failed')\n            }\n        })\n    },\n\n    fetchParticipants({commit}, eventId) {\n        commit('unSetParticipants');\n        firebase.database().ref('events').child(eventId.id).child('users_attending').on('child_added', snapshot => {\n            commit('setParticipants', snapshot.val())\n        })\n    },\n\n    fetchVirtualParticipants({commit}, eventId) {\n        commit('unSetVirtualParticipants');\n        firebase.database().ref('events').child(eventId.id).child('virtual_attending').on('child_added', snapshot => {\n            commit('setVirtualParticipants', snapshot.val())\n        })\n    },\n\n    fetchCharities({commit}) {\n        commit('unsetCharities')\n        firebase.database().ref('charities').on('child_added', snapshot => {\n            commit('setCharities', {\n                ...snapshot.val(),\n                id: snapshot.key\n            })\n        })\n    },\n\n    // Delete Event\n    eventDelete({commit,state}, id) {\n        const event = {\n            deleted: true\n        }\n        let upd_item=state.events.find(event_item=>event_item.id==id)\n        var index = state.events.indexOf(upd_item);\n\n        // state.events[index].deleted=true\n        console.log(index)\n        // console.log(state.events[index])\n        commit('updateEvents',index);\n        // console.log(state.events.find(event_item=>event_item.id==id))\n\n        firebase.database().ref('events').child(id).update(event).then(() => {\n            // let upd_item=state.events.find(event_item=>event_item.id==id)\n            // commit('unSetEvents');\n            // firebase.database().ref('events').on('child_added', snapshot => {\n            //     commit('setEvents', {\n            //         ...snapshot.val(),\n            //         id: snapshot.key\n            //     })\n            // })\n        })\n    }\n};\n\nconst mutations = {\n    setEvents: (state, payload) => (state.events.push(payload)),\n    unSetEvents: (state) => state.events = [],\n    setSelectedEvent: (state, payload) => (state.selectedEvent.push(payload)),\n    unSetSelectedEvent: state => state.selectedEvent = [],\n    unSetParticipants: (state) => state.participants = [],\n    setParticipants: (state, payload) => (state.participants.push(payload)),\n    setParticipated: (state, payload) => {\n        state.participated = payload\n    },\n\n    unsetEventCreated: (state, payload) => (state.eventCreated = payload),\n    setEventCreated: (state, payload) => (state.eventCreated = payload),\n\n    unSetVirtualParticipants: (state) => state.virtual_participants = [],\n    setVirtualParticipants: (state, payload) => (state.virtual_participants.push(payload)),\n\n    setCharities: (state, payload) => (state.charities.push(payload)),\n\n    unsetCharities: (state) => (state.charities = []),\n    updateEvents(state,index){\n        state.events[index].delete=true\n    }\n};\n\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}