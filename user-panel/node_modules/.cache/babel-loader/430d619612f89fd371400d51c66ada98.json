{"remainingRequest":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/eslint-loader/index.js??ref--13-0!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/store/modules/user.js","dependencies":[{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/store/modules/user.js","mtime":1569422283385},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar state = {\n  user: [],\n  status: null,\n  error: null,\n  loggedUser: null,\n  verified: null,\n  allUsers: [],\n  reset: null\n};\nvar getters = {\n  status: function status(state) {\n    return state.status;\n  },\n  user: function user(state) {\n    return state.user;\n  },\n  error: function error(state) {\n    return state.error;\n  },\n  loggedUser: function loggedUser(state) {\n    return state.loggedUser;\n  },\n  verified: function verified(state) {\n    return state.verified;\n  },\n  allUsers: function allUsers(state) {\n    return state.allUsers;\n  },\n  reset: function reset(state) {\n    return state.reset;\n  }\n};\nvar actions = {\n  // Register New User\n  createUser: function createUser(_ref, userObj) {\n    var commit = _ref.commit;\n    firebase.auth().createUserWithEmailAndPassword(userObj.email, userObj.password).then(function (newUser) {\n      firebase.auth().currentUser.sendEmailVerification().then(function () {\n        return console.log('Verification Email Sent');\n      }).catch(function (err) {\n        return console.log('Not Sent ', err);\n      }); // newUser.sendEmailVerification()\n\n      firebase.database().ref('users').child(newUser.user.uid).set(userObj).then(function (data) {\n        commit('setStatus', 'success');\n        commit('setError', null);\n        console.log(\"chuk\");\n      }).catch(function (err) {\n        commit('setStatus', 'failure');\n        commit('setError', err.message);\n        console.log(err);\n        console.log(\"chuk\");\n      });\n    }).catch(function (err) {\n      commit('setStatus', 'failure');\n      commit('setError', err.message);\n      console.log(err);\n      console.log(\"chuk\");\n    });\n  },\n  // Login and Authenticate User\n  authenticateLogin: function authenticateLogin(context, user_payload) {\n    firebase.auth().signInWithEmailAndPassword(user_payload.email, user_payload.password).then(function () {\n      console.log(\"auth completed\");\n\n      if (firebase.auth().currentUser.emailVerified) {\n        localStorage.setItem(\"email\", user_payload.email);\n        firebase.auth().onAuthStateChanged(function (user) {\n          if (user) {\n            firebase.database().ref('users').child(user.uid).once('value', function (snapshot) {\n              if (snapshot.val()) {\n                context.commit('setVerified', 'yes');\n                context.commit('setLoggedUser', _objectSpread({}, snapshot.val(), {\n                  id: snapshot.key\n                }));\n              } else {\n                console.log('Nothing');\n              }\n            });\n          }\n        });\n      } else {\n        context.commit('setVerified', 'no');\n      }\n    }).catch(function (error) {\n      context.commit('setError', error.message);\n      console.log(error.message);\n    });\n  },\n  signOutRequest: function signOutRequest(context) {\n    firebase.auth().signOut().then(function () {\n      console.log('User Logged Out');\n      context.commit(\"unSetUser\");\n    });\n  },\n  finalSignoutrequest: function finalSignoutrequest(context) {\n    firebase.auth().signOut().then(function () {\n      console.log('User Logged Out');\n      context.commit(\"unSetFinal\");\n    });\n  },\n  passwordReset: function passwordReset(_ref2, email) {\n    var commit = _ref2.commit;\n    firebase.auth().sendPasswordResetEmail(email).then(function () {\n      commit('resetPassword', 'success');\n    }).catch(function (err) {\n      commit('resetPassword', 'failed');\n    });\n  },\n  updateUserProfile: function updateUserProfile(_ref3, payload) {\n    var commit = _ref3.commit;\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        firebase.database().ref('users').child(user.uid).update(payload).then(function () {\n          firebase.database().ref('users').child(user.uid).once('value', function (snapshot) {\n            if (snapshot.val()) {\n              console.log('Profile Updated ');\n              commit('unSetUser');\n              commit('setVerified', 'yes');\n              commit('setLoggedUser', _objectSpread({}, snapshot.val(), {\n                id: snapshot.key\n              }));\n            } else {\n              console.log('Nothing');\n            }\n          });\n        }).catch(function (err) {\n          return console.log(err.message);\n        });\n      }\n    });\n  },\n  updateImage: function updateImage(_ref4, payload) {\n    var commit = _ref4.commit;\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        if (payload.profile_image != null) {\n          var storageRef = firebase.storage().ref('profile_images/' + payload.profile_image.name);\n          var uploadTask = storageRef.put(payload.profile_image);\n          uploadTask.on('state_changed', function (snapshot) {}, function (err) {\n            console.log(err.message);\n          }, function () {\n            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n              payload.profile_image = downloadURL;\n              console.log(\"After \" + payload.profile_image);\n            }).then(function () {\n              firebase.database().ref('users').child(user.uid).update(payload).then(function () {\n                firebase.database().ref('users').child(user.uid).once('value', function (snapshot) {\n                  if (snapshot.val()) {\n                    console.log('Profile Updated ');\n                    commit('unSetUser');\n                    commit('setVerified', 'yes');\n                    commit('setLoggedUser', _objectSpread({}, snapshot.val(), {\n                      id: snapshot.key\n                    }));\n                  } else {\n                    console.log('Nothing');\n                  }\n                });\n              }).catch(function (err) {\n                return console.log(err.message);\n              });\n            }).catch(function (err) {\n              return console.log(err);\n            });\n          });\n        }\n      }\n    });\n  },\n  updateVideo: function updateVideo(_ref5, payload) {\n    var commit = _ref5.commit;\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        if (payload.profile_video != null) {\n          var storageRef = firebase.storage().ref('profile_videos/' + payload.profile_video.name);\n          var uploadTask = storageRef.put(payload.profile_video);\n          uploadTask.on('state_changed', function (snapshot) {}, function (err) {\n            console.log(err.message);\n          }, function () {\n            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n              payload.profile_video = downloadURL;\n              console.log(\"After \" + payload.profile_video);\n            }).then(function () {\n              firebase.database().ref('users').child(user.uid).update(payload).then(function () {\n                firebase.database().ref('users').child(user.uid).once('value', function (snapshot) {\n                  if (snapshot.val()) {\n                    console.log('Profile Updated ');\n                    commit('unSetUser');\n                    commit('setVerified', 'yes');\n                    commit('setLoggedUser', _objectSpread({}, snapshot.val(), {\n                      id: snapshot.key\n                    }));\n                  } else {\n                    console.log('Nothing');\n                  }\n                });\n              }).catch(function (err) {\n                return console.log(err.message);\n              });\n            }).catch(function (err) {\n              return console.log(err);\n            });\n          });\n        }\n      }\n    });\n  },\n  fetchUser: function fetchUser(_ref6) {\n    var commit = _ref6.commit;\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        firebase.database().ref('users').child(user.uid).on('value', function (snapshot) {\n          if (snapshot.val()) {\n            console.log('User Fetched ');\n            commit('unSetUser');\n            commit('setVerified', 'yes');\n            commit('setLoggedUser', _objectSpread({}, snapshot.val(), {\n              id: snapshot.key\n            }));\n          } else {\n            console.log('Nothing');\n          }\n        });\n      }\n    });\n  },\n  fetchAllUsers: function fetchAllUsers(_ref7) {\n    var commit = _ref7.commit;\n    commit('unsetAllSetUsers');\n    firebase.database().ref('users').on('child_added', function (snapshot) {\n      if (snapshot.val()) {\n        commit('setAllUsers', _objectSpread({}, snapshot.val(), {\n          id: snapshot.key\n        }));\n      }\n    });\n  },\n  fetchUserById: function fetchUserById(_ref8, userId) {\n    var commit = _ref8.commit;\n    firebase.database().ref('users').child(userId).on('value', function (snapshot) {\n      commit('setUser', _objectSpread({}, snapshot.val(), {\n        id: snapshot.key\n      }));\n    });\n  },\n  saveSearch: function saveSearch(context, search) {\n    console.log(search);\n    firebase.database().ref('searches').push({\n      search: search\n    }).then(function () {\n      console.log(\"search saved\");\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n};\nvar mutations = {\n  setUser: function setUser(state, user) {\n    return state.user = user;\n  },\n  setStatus: function setStatus(state, payload) {\n    return state.status = payload;\n  },\n  setError: function setError(state, payload) {\n    return state.error = payload;\n  },\n  setVerified: function setVerified(state, payload) {\n    return state.verified = payload;\n  },\n  removeUser: function removeUser(state) {\n    return state.user = null;\n  },\n  setLoggedUser: function setLoggedUser(state, payload) {\n    localStorage.setItem(\"loggedUser\", JSON.stringify(payload));\n    console.log(\"auth user set\");\n    state.loggedUser = payload;\n  },\n  unSetFinal: function unSetFinal(state) {\n    state.loggedUser = null;\n    localStorage.removeItem(\"loggedUser\");\n    window.location.reload(false);\n  },\n  unSetUser: function unSetUser(state) {\n    state.loggedUser = null;\n    localStorage.removeItem(\"loggedUser\");\n  },\n  setAllUsers: function setAllUsers(state, payload) {\n    return state.allUsers.push(payload);\n  },\n  unsetAllSetUsers: function unsetAllSetUsers(state) {\n    return state.allUsers = [];\n  },\n  resetPassword: function resetPassword(state, payload) {\n    return state.reset = payload;\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/store/modules/user.js"],"names":["state","user","status","error","loggedUser","verified","allUsers","reset","getters","actions","createUser","userObj","commit","firebase","auth","createUserWithEmailAndPassword","email","password","then","newUser","currentUser","sendEmailVerification","console","log","catch","err","database","ref","child","uid","set","data","message","authenticateLogin","context","user_payload","signInWithEmailAndPassword","emailVerified","localStorage","setItem","onAuthStateChanged","once","snapshot","val","id","key","signOutRequest","signOut","finalSignoutrequest","passwordReset","sendPasswordResetEmail","updateUserProfile","payload","update","updateImage","profile_image","storageRef","storage","name","uploadTask","put","on","getDownloadURL","downloadURL","updateVideo","profile_video","fetchUser","fetchAllUsers","fetchUserById","userId","saveSearch","search","push","mutations","setUser","setStatus","setError","setVerified","removeUser","setLoggedUser","JSON","stringify","unSetFinal","removeItem","window","location","reload","unSetUser","setAllUsers","unsetAllSetUsers","resetPassword"],"mappings":"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","sourcesContent":["const state = {\n    user: [],\n    status: null,\n    error: null,\n    loggedUser: null,\n    verified: null,\n    allUsers: [],\n    reset: null,\n\n};\n\nconst getters = {\n    status: (state) => {\n        return state.status\n    },\n\n    user: (state) => {\n        return state.user\n    },\n\n    error: (state) => {\n        return state.error\n    },\n\n    loggedUser: (state) => {\n        return state.loggedUser\n    },\n    verified: (state) => {\n        return state.verified\n    },\n    allUsers: (state) => {\n        return state.allUsers\n    },\n    reset: (state) => {\n        return state.reset\n    }\n\n};\n\nconst actions = {\n    // Register New User\n    createUser({commit}, userObj) {\n        \n        firebase.auth().createUserWithEmailAndPassword(userObj.email, userObj.password)\n        .then(newUser => {\n            firebase.auth().currentUser.sendEmailVerification()\n            .then(() => console.log('Verification Email Sent')).catch(err => console.log('Not Sent ', err));\n           // newUser.sendEmailVerification()\n            firebase.database().ref('users').child(newUser.user.uid).set(userObj)\n            .then(data => {\n                \n                commit('setStatus', 'success')\n                commit('setError', null)\n                console.log(\"chuk\")\n                \n            }).catch(err => {\n                commit('setStatus', 'failure')\n                commit('setError', err.message)\n                console.log(err)\n                console.log(\"chuk\")\n            });\n        }).catch(err => {\n            commit('setStatus', 'failure')\n            commit('setError', err.message)\n            console.log(err)\n            console.log(\"chuk\")\n        })\n    },\n\n    // Login and Authenticate User\n    authenticateLogin(context, user_payload) {\n            \n            firebase.auth().signInWithEmailAndPassword(user_payload.email, user_payload.password)\n                .then(() => {\n                    console.log(\"auth completed\")\n                    if(firebase.auth().currentUser.emailVerified){\n                        localStorage.setItem(\"email\", user_payload.email);\n                        firebase.auth().onAuthStateChanged(user => {\n                            if (user) {\n                                \n                                firebase.database().ref('users').child(user.uid)\n                                    .once('value', snapshot => {\n                                        \n                                    if (snapshot.val()) {\n                                        context.commit('setVerified', 'yes')\n                                        context.commit('setLoggedUser', {\n                                                ...snapshot.val(),\n                                                id: snapshot.key})\n                                        }\n                                    else {\n                                        console.log('Nothing')\n                                    }\n                                })\n                            }\n                        })\n                    }\n                    else {\n                        context.commit('setVerified', 'no')\n                    }\n                    \n                })\n                .catch(error => {\n                    context.commit('setError', error.message)\n                    console.log(error.message)\n                });\n    },\n\n    signOutRequest(context){\n        firebase.auth().signOut()\n            .then(() => {\n                console.log('User Logged Out')\n                context.commit(\"unSetUser\")\n            })\n    },\n    finalSignoutrequest(context){\n        firebase.auth().signOut()\n        .then(() => {\n            console.log('User Logged Out')\n            context.commit(\"unSetFinal\")\n        })\n    },\n\n    passwordReset({commit}, email){\n        firebase.auth().sendPasswordResetEmail(email).then(() => {\n            commit('resetPassword', 'success')\n        }).catch(err => {\n            commit('resetPassword', 'failed')\n        })\n    },\n\n    updateUserProfile({commit}, payload) {\n        \n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                firebase.database().ref('users').child(user.uid).update(payload).then(() => {\n                    firebase.database().ref('users').child(user.uid)\n                                .once('value', snapshot => {\n                                    \n                                    if (snapshot.val()) {\n                                        console.log('Profile Updated ');\n                                        commit('unSetUser')\n                                        commit('setVerified', 'yes')\n                                        commit('setLoggedUser', {\n                                                ...snapshot.val(),\n                                                id: snapshot.key})\n                                    }\n                                    else {\n                                        console.log('Nothing')\n                                    }\n                                })\n                }).catch(err => console.log(err.message))\n            }\n        })\n    },\n\n    updateImage({commit}, payload) {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                if(payload.profile_image != null) {\n                    var storageRef = firebase.storage().ref('profile_images/'+payload.profile_image.name);\n                    let uploadTask = storageRef.put(payload.profile_image);\n\n                    uploadTask.on('state_changed', snapshot => {\n        \n                    }, function(err){\n                        console.log(err.message);\n                    }, function() {\n                        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                            payload.profile_image = downloadURL;\n                            console.log(\"After \" + payload.profile_image);\n                        }).then(() => {\n                            firebase.database().ref('users').child(user.uid).update(payload).then(() => {\n                                firebase.database().ref('users').child(user.uid)\n                                            .once('value', snapshot => {\n                                                \n                                                if (snapshot.val()) {\n                                                    console.log('Profile Updated ');\n                                                    commit('unSetUser')\n                                                    commit('setVerified', 'yes')\n                                                    commit('setLoggedUser', {\n                                                            ...snapshot.val(),\n                                                            id: snapshot.key})\n                                                }\n                                                else {\n                                                    console.log('Nothing')\n                                                }\n                                            })\n                            }).catch(err => console.log(err.message))\n                        }).catch(err => console.log(err))\n                    })\n                }\n            }\n        })\n    },\n\n    updateVideo({commit}, payload) {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                if(payload.profile_video != null) {\n                    var storageRef = firebase.storage().ref('profile_videos/'+payload.profile_video.name);\n                    let uploadTask = storageRef.put(payload.profile_video);\n\n                    uploadTask.on('state_changed', snapshot => {\n        \n                    }, function(err){\n                        console.log(err.message);\n                    }, function() {\n                        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                            payload.profile_video = downloadURL;\n                            console.log(\"After \" + payload.profile_video);\n                        }).then(() => {\n                            firebase.database().ref('users').child(user.uid).update(payload).then(() => {\n                                firebase.database().ref('users').child(user.uid)\n                                            .once('value', snapshot => {\n                                                \n                                                if (snapshot.val()) {\n                                                    console.log('Profile Updated ');\n                                                    commit('unSetUser')\n                                                    commit('setVerified', 'yes')\n                                                    commit('setLoggedUser', {\n                                                            ...snapshot.val(),\n                                                            id: snapshot.key})\n                                                }\n                                                else {\n                                                    console.log('Nothing')\n                                                }\n                                            })\n                            }).catch(err => console.log(err.message))\n                        }).catch(err => console.log(err))\n                    })\n                }\n            }\n        })\n    },\n\n    fetchUser({commit}) {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                firebase.database().ref('users').child(user.uid).on('value', snapshot => {\n                    if (snapshot.val()) {\n                        console.log('User Fetched ');\n                        commit('unSetUser')\n                        commit('setVerified', 'yes')\n                        commit('setLoggedUser', {\n                                ...snapshot.val(),\n                                id: snapshot.key})\n                    }\n                    else {\n                        console.log('Nothing')\n                    }\n                })\n            }\n        })\n    },\n\n    fetchAllUsers({commit}) {\n        commit('unsetAllSetUsers')\n        firebase.database().ref('users').on('child_added', snapshot => {\n            if(snapshot.val()) {\n                commit('setAllUsers', {\n                        ...snapshot.val(),\n                        id: snapshot.key})\n            }\n        })\n    },\n\n    fetchUserById({commit}, userId){\n        firebase.database().ref('users').child(userId).on('value', snapshot => {\n            commit('setUser', {\n                ...snapshot.val(),\n                id: snapshot.key\n            });\n        })\n    },\n\n    saveSearch(context,search) {\n        console.log(search)\n        firebase.database().ref('searches').push({search}).then(() => {\n            console.log(\"search saved\")\n        }).catch(err => console.log(err))\n    }\n};\n\nconst mutations = {\n    setUser: (state, user) => (state.user = user),\n    setStatus: (state, payload) => (state.status = payload),\n    setError: (state, payload) => (state.error = payload),\n    setVerified: (state, payload) => (state.verified = payload),\n    removeUser: (state) => (state.user = null),\n    setLoggedUser: (state, payload) => {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(payload));\n        console.log(\"auth user set\")\n        state.loggedUser=payload\n    },\n    unSetFinal(state){\n        state.loggedUser=null\n        localStorage.removeItem(\"loggedUser\");\n        window.location.reload(false);\n    },\n    unSetUser(state) {\n        state.loggedUser=null\n        localStorage.removeItem(\"loggedUser\");\n    },\n\n    setAllUsers: (state, payload) => (state.allUsers.push(payload)),\n    unsetAllSetUsers: (state) => state.allUsers = [],\n    resetPassword: (state, payload) => (state.reset = payload)\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n}\n"]}]}