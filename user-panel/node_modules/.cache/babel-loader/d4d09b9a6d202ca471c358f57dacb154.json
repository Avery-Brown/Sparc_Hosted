{"remainingRequest":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/thread-loader/dist/cjs.js!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/pages/HostPastEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/src/pages/HostPastEvents.vue","mtime":1569422283380},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/Users/ericlin/Documents/Duke/Junior/Fall/CS408/Sparc_Hosted/user-panel/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport moment from 'moment';\nexport default {\n  name: 'host-past-engagements',\n  data: function data() {\n    return {\n      userEvents: [],\n      foundEvents: [],\n      rating: 5,\n      currentDate: null\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['getEvents', 'allRatings']), {\n    thevents: function thevents() {\n      var _this = this;\n\n      return this.userEvents.map(function (event_id) {\n        var event_item = _this.getEvents.find(function (event_item) {\n          return event_item.id == event_id;\n        }); // Date.parse(this.currentDate) <= Date.parse(event_item.date)) \n\n\n        return event_item;\n      });\n    },\n    dates: function dates() {\n      return this.thevents.filter(function (event_item) {\n        return moment(event_item.date).isBefore(moment().format('MM/DD/YYYY')) == true;\n      });\n    }\n  }),\n  watch: {\n    getEvents: function getEvents() {\n      if (this.getEvents.length > 0) {\n        this.fetchPast(); //              var today = new Date();\n        //   var dd = today.getDate();\n        //   var mm = today.getMonth() + 1;\n        //   var yyyy = today.getFullYear();\n        //   this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n        //         const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n        // for(var key in loggedUser.events_hosted){\n        //   this.userEvents.push(loggedUser.events_hosted[key])\n        // }\n        // console.log(this.thevents)\n        // console.log(this.dates)\n        // this.foundEvents=this.dates\n      }\n    }\n  },\n  methods: {\n    viewEvent: function viewEvent(id) {\n      this.$router.push({\n        path: '/events/' + id\n      });\n    },\n    fetchPast: function fetchPast() {\n      this.userEvents = [];\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1;\n      var yyyy = today.getFullYear();\n      this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n      var loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n\n      for (var key in loggedUser.events_hosted) {\n        this.userEvents.push(loggedUser.events_hosted[key]);\n      }\n\n      console.log(\" hook\");\n\n      if (this.getEvents.length > 0) {\n        this.foundEvents = this.dates;\n      }\n    },\n    getRatings: function getRatings(id) {\n      var avgRating = [];\n      this.allRatings.filter(function (rating) {\n        if (rating.host_id == id) {\n          avgRating.push(rating.ratingStars);\n        }\n      });\n\n      if (avgRating.length > 0) {\n        var sum = 0.0;\n        var avg = 0.0;\n\n        for (var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i];\n        }\n\n        avg = sum / avgRating.length;\n        return avg;\n      }\n    }\n  },\n  created: function created() {\n    this.fetchPast();\n  }\n};",{"version":3,"sources":["HostPastEvents.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        \n    <div class=\"main\">\n      <div class=\"section section-images\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n                <h2>Past Engagements</h2>\n                <div class=\"row\" v-if=\"getEvents.length>0\">\n                  <div class=\"col-md-4\" v-for=\"(event, index) in foundEvents\" v-if=\"event.deleted==false\" :key=\"index\">\n                    <div >\n                    <div @click=\"viewEvent(event.id)\" style=\"cursor: pointer\">\n                        <div class=\"card\">\n                          <div class=\"card-header\">\n                              <img v-if=\"event.event_image != null\" :src=\"event.event_image\" width=\"500\" height=\"200\" alt=\"\">\n                              <img v-else src=\"../../public/sparcS.png\" width=\"500\" height=\"200\" alt=\"\">\n                          </div>\n                          <div class=\"card-body\">\n                              <h5 class=\"text-success title-up\"><b> {{ event.event_name }} </b></h5>\n                              <h6> <star-rating :rating=\"getRatings(event.created_by)\" :increment=\"0.1\" :star-size=\"16\" :read-only=\"true\"></star-rating></h6>\n                              <h6 class=\"text-info\"> <i class=\"fa fa-map-marker\"></i> {{ event.event_location }}</h6>\n                              <h6 class=\"text-info\"> <i class=\"fa fa-clock-o\"></i> {{ event.start_time + \" - \" + event.end_time }} </h6>\n                              <h6 class=\"text-info\"> <i class=\"fa fa-calendar\"></i> {{ event.date }}</h6>\n                          </div>\n                        </div>\n                    </div>\n                  </div>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n  import moment from 'moment'\n\nexport default {\n    name: 'host-past-engagements',\n    data() {\n      return {\n        userEvents: [],\n        foundEvents: [],\n        rating: 5,\n        currentDate: null\n      }\n    },\n    computed : {\n        ...mapGetters(['getEvents', 'allRatings']),\n        thevents() {\n          return this.userEvents.map(event_id=> {\n          let event_item=this.getEvents.find(event_item=> event_item.id==event_id)// Date.parse(this.currentDate) <= Date.parse(event_item.date)) \n          return event_item;\n          })\n        },\n        dates(){\n          return this.thevents.filter(event_item=>moment(event_item.date).isBefore(moment().format('MM/DD/YYYY'))==true)\n        }\n    },\n    watch:{\n      getEvents(){\n         if(this.getEvents.length>0){\n           this.fetchPast()\n      //              var today = new Date();\n      //   var dd = today.getDate();\n      //   var mm = today.getMonth() + 1;\n      //   var yyyy = today.getFullYear();\n\n      //   this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n      //         const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n      // for(var key in loggedUser.events_hosted){\n      //   this.userEvents.push(loggedUser.events_hosted[key])\n      // }\n              // console.log(this.thevents)\n              // console.log(this.dates)\n              // this.foundEvents=this.dates\n\n         }\n      }\n    },\n    methods: {\n        viewEvent(id) {\n          this.$router.push({path: '/events/'+id})\n        },\n        fetchPast(){\n          this.userEvents=[]\n        var today = new Date();\n        var dd = today.getDate();\n        var mm = today.getMonth() + 1;\n        var yyyy = today.getFullYear();\n        this.currentDate = mm + \"/\" + dd + \"/\" + yyyy;\n        const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\n        for(var key in loggedUser.events_hosted){\n          this.userEvents.push(loggedUser.events_hosted[key])\n        }\n        console.log(\" hook\")\n      \n        if(this.getEvents.length>0) {\n              this.foundEvents=this.dates\n         }\n        },\n        getRatings(id) {\n      let avgRating = [];\n      this.allRatings.filter(rating => {\n        if(rating.host_id == id) {\n          avgRating.push(rating.ratingStars)\n        }\n      })\n\n      if(avgRating.length > 0) {\n        let sum = 0.0;\n        let avg = 0.0;\n\n        for(var i = 0; i < avgRating.length; i++) {\n          sum += avgRating[i]\n        }\n        avg = sum / avgRating.length;\n        return avg          \n      }\n    },\n    },\n    created() {\n        this.fetchPast()\n    }\n}\n</script>\n\n<style scoped>\n    \n</style>"],"sourceRoot":"src/pages"}]}